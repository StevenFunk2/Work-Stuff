SECTIONS,12|INFO|7|104|GOT_COUNT,168GOT_DATA,3LOADERSTART,144EXIT_INIT,4163EXIT_CYCLIC,4130EXIT_EXIT,4203NO_DEBUG_INFO,0|GOT|168|6066|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0f_trig,AVT + Name(-1),0BrakeAutoIndicator,PV(-1),11,(Cyclic.ld)LBrakePartEjectSolenoid,PV(-1),11,(Cyclic.ld)BrakeEncoder,PV(-1),3,(Cyclic.ld)WBBeamSettleStep,PV(-1),11,(Cyclic.ld)JobsDifferent,PV(-1),11,(Cyclic.ld)InsulationRequired,PV(-1),11,(Cyclic.ld)zzBOOL00010011,PV(-1),11,(Cyclic.ld)BrakeManualIndicator,PV(-1),11,(Cyclic.ld)BrakeSetOK,PV(-1),11,(Cyclic.ld)zz000800010002,PV(-1),12,(Cyclic.ld)zzRTR00001000C,PV(-1),68,(Cyclic.ld)WB1BendDoneStep,PV(-1),11,(Cyclic.ld)BeginEjectStep,PV(-1),11,(Cyclic.ld)WBCloseClampStep,PV(-1),11,(Cyclic.ld)zz000400010000,PV(-1),3,(Cyclic.ld)BrakeCarriageTarget,PV(-1),12,(Cyclic.ld)BAOK,PV(-1),11,(Cyclic.ld)zzBOOL00010014,PV(-1),11,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)BrakeTarget3,PV(-1),12,(Cyclic.ld)zzBOOL0001000C,PV(-1),11,(Cyclic.ld)BrakeConveyorLow,PV(-1),11,(Cyclic.ld)PartPresentPSpotter,PV(-1),11,(Cyclic.ld)LBWN5,PV(-1),11,(Cyclic.ld)WBArmsUpStep,PV(-1),11,(Cyclic.ld)BrakeSingleCycle,PV(-1),11,(Cyclic.ld)zzRTR00001000A,PV(-1),66,(Cyclic.ld)BrakeLeafLower,PV(-1),11,(Cyclic.ld)BrakeStatus,PV(-1),3,(Cyclic.ld)BrakeAuto,PV(-1),11,(Cyclic.ld)zzBOOL0001000E,PV(-1),11,(Cyclic.ld)zzRTR00001000E,PV(-1),70,(Cyclic.ld)CarriageClampClose,PV(-1),11,(Cyclic.ld)zzBOOL00010016,PV(-1),11,(Cyclic.ld)BendingAgain,PV(-1),11,(Cyclic.ld)LBWN11,PV(-1),11,(Cyclic.ld)zzFTR000010001,PV(-1),55,(Cyclic.ld)RealBrakePosition,PV(-1),12,(Cyclic.ld)zzBOOL0001000F,PV(-1),11,(Cyclic.ld)BeamSettleTimerDone,PV(-1),11,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)zz000400010002,PV(-1),3,(Cyclic.ld)BrakeIsSetUp,PV(-1),11,(Cyclic.ld)ResOK,PV(-1),11,(Cyclic.ld)RunJob,PV(-1),3,(Cyclic.ld)BrakeLeafHomeProx,PV(-1),11,(Cyclic.ld)WBPreset4,PV(-1),3,(Cyclic.ld)LBWN2,PV(-1),11,(Cyclic.ld)zzRTR000010000,PV(-1),56,(Cyclic.ld)zzRTR000010002,PV(-1),58,(Cyclic.ld)HWBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)BrakeManualButton,PV(-1),11,(Cyclic.ld)BendSequenceReset,PV(-1),11,(Cyclic.ld)WBRaiseArmsStep,PV(-1),11,(Cyclic.ld)WBCarriageReturnStep,PV(-1),11,(Cyclic.ld)BrakeReference,PV(-1),12,(Cyclic.ld)EStopClear,PV(-1),11,(Cyclic.ld)CarriageArmRaise,PV(-1),11,(Cyclic.ld)TON_3,PV(-1),52,(Cyclic.ld)RaiseSquareArms,PV(-1),11,(Cyclic.ld)LBrakeWithPLC,PV(-1),11,(Cyclic.ld)BrakeSetButton,PV(-1),11,(Cyclic.ld)WBReadyToCycleStep,PV(-1),11,(Cyclic.ld)zzBOOL00010012,PV(-1),11,(Cyclic.ld)EWBAutoLatch,PV(-1),11,(Cyclic.ld)BrakeResolution,PV(-1),12,(Cyclic.ld)RaiseLeafTimerDone,PV(-1),11,(Cyclic.ld)TON_1,PV(-1),50,(Cyclic.ld)LBWN4,PV(-1),11,(Cyclic.ld)HWBrakeWithPLC,PV(-1),11,(Cyclic.ld)zzRTR00001000B,PV(-1),67,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)SetBendingSolenoids,PV(-1),11,(Cyclic.ld)WBPreset5,PV(-1),3,(Cyclic.ld)BCTGreatThan0,PV(-1),11,(Cyclic.ld)WBMachineSetStep,PV(-1),11,(Cyclic.ld)BrakeTarget0,PV(-1),12,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)zzFTR000010000,PV(-1),54,(Cyclic.ld)LBrakeEjectorSwitch,PV(-1),11,(Cyclic.ld)BrakeLeafRaise,PV(-1),11,(Cyclic.ld)zzBOOL00010013,PV(-1),11,(Cyclic.ld)LBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)MakeTargets,PV(-1),11,(Cyclic.ld)WBRaiseBeamStep,PV(-1),11,(Cyclic.ld)BendingLatch,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)zzRTR000010005,PV(-1),61,(Cyclic.ld)zz000300010000,PV(-1),8,(Cyclic.ld)BrakeBeamRaise,PV(-1),11,(Cyclic.ld)zzBOOL0001000A,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),51,(Cyclic.ld)ExitBeltsOn,PV(-1),11,(Cyclic.ld)BrakeActive,PV(-1),11,(Cyclic.ld)zzBOOL0001000D,PV(-1),11,(Cyclic.ld)WBLowerCarriageArmsStep,PV(-1),11,(Cyclic.ld)BrakeAutoRequest,PV(-1),11,(Cyclic.ld)zz000800010000,PV(-1),12,(Cyclic.ld)WBLeafNotHomeStep,PV(-1),11,(Cyclic.ld)zzRTR000010008,PV(-1),64,(Cyclic.ld)WBCheckBeamStep,PV(-1),11,(Cyclic.ld)LBWN10,PV(-1),11,(Cyclic.ld)BrakeHydraulics,PV(-1),11,(Cyclic.ld)WBBendSeqStartStep,PV(-1),11,(Cyclic.ld)zzRTR000010006,PV(-1),62,(Cyclic.ld)BrakeActual,PV(-1),12,(Cyclic.ld)zzRTR000010003,PV(-1),59,(Cyclic.ld)LBWNReady,PV(-1),11,(Cyclic.ld)WBRaiseLeafStep,PV(-1),11,(Cyclic.ld)BrakeBeamLower,PV(-1),11,(Cyclic.ld)zzBOOL00010010,PV(-1),11,(Cyclic.ld)BrakeArmLwrInhibit,PV(-1),11,(Cyclic.ld)BrakeBeamDownProx,PV(-1),11,(Cyclic.ld)BrakeIsRefed,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0x104a),19,(Init.ld)zz000800010003,PV(-1),12,(Cyclic.ld)BrakeBeamUpProx,PV(-1),11,(Cyclic.ld)WBCheckLeafStep,PV(-1),11,(Cyclic.ld)BrakeDriveReady,PV(-1),11,(Cyclic.ld)zz000400010001,PV(-1),3,(Cyclic.ld)WBLowerBeamStep,PV(-1),11,(Cyclic.ld)PCBrakeSetSignal,PV(-1),11,(Cyclic.ld)WBLowerLeafStep,PV(-1),11,(Cyclic.ld)BrakeDesired,PV(-1),12,(Cyclic.ld)zzRTR00001000F,PV(-1),71,(Cyclic.ld)RawBrakeEncoder,PV(-1),12,(Cyclic.ld)BrakeBeamLwrInhibit,PV(-1),11,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0x1054),19,(Init.ld)TON_4,PV(-1),53,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)SetSignalReset,PV(-1),11,(Cyclic.ld)WBStopLeafStep,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)BrakeTarget2,PV(-1),12,(Cyclic.ld)zzBOOL0001000B,PV(-1),11,(Cyclic.ld)BrakeTarget1,PV(-1),12,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)WBIndex,PV(-1),8,(Cyclic.ld)DoneBending,PV(-1),11,(Cyclic.ld)FBBrakeSetSignal,PV(-1),11,(Cyclic.ld)CarriageArmLower,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)zzRTR00001000D,PV(-1),69,(Cyclic.ld)SingleCyclingBrake,PV(-1),11,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)zzBOOL00010015,PV(-1),11,(Cyclic.ld)zzRTR000010001,PV(-1),57,(Cyclic.ld)zzRTR000010004,PV(-1),60,(Cyclic.ld)BDOK,PV(-1),11,(Cyclic.ld)zz000300010001,PV(-1),8,(Cyclic.ld)ElectricWrapBrake,PV(-1),11,(Cyclic.ld)WBOpenClampStep,PV(-1),11,(Cyclic.ld)StopLeafTimerDone,PV(-1),11,(Cyclic.ld)zz000800010001,PV(-1),12,(Cyclic.ld)EjectComplete,PV(-1),11,(Cyclic.ld)zzRTR000010009,PV(-1),65,(Cyclic.ld)BrakeConveyorHigh,PV(-1),11,(Cyclic.ld)zzRTR000010007,PV(-1),63,(Cyclic.ld)BrakeJob,PV(-1),3,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0x1067),0_GLOBAL_OFFSET_TABLE_,PCREL(0x1037),0_GLOBAL_OFFSET_TABLE_,PCREL(0x53),0|FILES|3|182|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ldC:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ldC:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|LINE|161|1695|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ld|1|20|__AS__CyclicProgram1,87,03,98,04,106,08,137,010,138,012,149,013,157,017,191,019,192,021,203,022,211,026,245,028,246,030,257,031,265,035,299,037,300,041,343,042,351,045,417,047,418,049,435,050,454,059,541,078,745,080,762,081,781,082,791,084,803,086,814,087,822,089,840,091,853,092,872,094,890,096,891,097,900,099,916,0101,933,0102,952,0106,983,0108,1000,0109,1008,0113,1032,0115,1033,0117,1044,0118,1052,0121,1091,0123,1092,0131,1165,0133,1182,0134,1201,0136,1219,0137,1227,0141,1258,0143,1259,0145,1276,0146,1295,0148,1313,0149,1321,0153,1353,0155,1354,0157,1371,0158,1390,0160,1407,0161,1426,0164,1458,0165,1466,0169,1486,0171,1487,0173,1504,0174,1523,0176,1541,0177,1549,0181,1583,0183,1584,0185,1601,0186,1620,0188,1637,0189,1656,0191,1673,0192,1692,0202,1770,0204,1787,0205,1795,0209,1917,0211,1918,0213,1929,0214,1937,0218,1971,0220,1972,0225,2017,0229,2049,0231,2066,0232,2085,0234,2103,0235,2111,0239,2141,0241,2142,0243,2159,0244,2178,0249,2231,0251,2243,0253,2260,0254,2279,0255,2289,0257,2305,0259,2322,0260,2341,0262,2358,0263,2377,0278,2510,0282,2540,0284,2557,0285,2576,0287,2593,0288,2612,0302,2747,0307,2790,0312,2833,0317,2876,0322,2919,0327,2964,0332,3007,0337,3050,0342,3093,0347,3136,0349,3147,0350,3155,0352,3173,0354,3189,0355,3208,0357,3226,0359,3227,0361,3238,0362,3246,0364,3264,0366,3280,0367,3299,0369,3317,0371,3318,0373,3329,0374,3337,0376,3355,0378,3368,0379,3387,0381,3405,0383,3406,0394,3511,0400,3571,0408,3648,0414,3706,0422,3768,0426,3800,0432,3858,0436,3890,0445,3963,0454,4040,0462,4113,0464,4130,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ld|__AS__CyclicProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ld|1|18|__AS__InitProgram2,4163,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ld|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|1|18|__AS__ExitProgram2,4203,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|__AS__ExitProgram|