SECTIONS,12|INFO|7|103|GOT_COUNT,64GOT_DATA,3LOADERSTART,144EXIT_INIT,6379EXIT_CYCLIC,6345EXIT_EXIT,6419NO_DEBUG_INFO,0|GOT|64|2186|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0BrakeEncoder,PV(-1),3,(Cyclic.st)TopDAC2,PV(-1),8,(Cyclic.st)ActlMetalEncoder,PV(-1),3,(Cyclic.st)MaxDAC,PV(-1),8,(Cyclic.st)BrakeCarriageTarget,PV(-1),12,(Cyclic.st)DACAdd1,PV(-1),12,(Cyclic.st)UnitsPerInch1,PV(-1),12,(Cyclic.st)DACBalance2,PV(-1),8,(Cyclic.st)InPosition1,PV(-1),11,(Cyclic.st)DecelCounter2,PV(-1),8,(Cyclic.st)DACAdd2,PV(-1),12,(Cyclic.st)Hold2,PV(-1),8,(Cyclic.st)BackGaugeHomeLS,PV(-1),11,(Cyclic.st)SRM2,PV(-1),12,(Cyclic.st)BackGaugeAirBrake,PV(-1),11,(Cyclic.st)Axis2Scaler,PV(-1),12,(Cyclic.st)TargetDAC2,PV(-1),8,(Cyclic.st)BrakeReference,PV(-1),12,(Cyclic.st)MaxDACSquared,PV(-1),8,(Cyclic.st)InPosition2,PV(-1),11,(Cyclic.st)BrakeResolution,PV(-1),12,(Cyclic.st)difference,PV(-1),3,(Cyclic.st)MetalTarget,PV(-1),3,(Cyclic.st)BackGaugeJogPercent,PV(-1),3,(Cyclic.st)AbsoluteDifference,PV(-1),3,(Cyclic.st)TopAxis2Speed,PV(-1),12,(Cyclic.st)ActualRunPercent2,PV(-1),12,(Cyclic.st)SettleTime2,PV(-1),8,(Cyclic.st)BrakeDriveEnable,PV(-1),11,(Cyclic.st)BrakeActual,PV(-1),12,(Cyclic.st)MetalScaler,PV(-1),12,(Cyclic.st)TargetCount2,PV(-1),8,(Cyclic.st)RealDAC2,PV(-1),12,(Cyclic.st)MoveLength2,PV(-1),3,(Cyclic.st)__AS__ImplInitInit,CODE(0x18f2),19,(Init.st)AccelRampReal2,PV(-1),12,(Cyclic.st)MotionStatus2,PV(-1),8,(Cyclic.st)BackGaugeRunPercent,PV(-1),3,(Cyclic.st)StopFlag2,PV(-1),11,(Cyclic.st)UpdateRate2,PV(-1),11,(Cyclic.st)BrakeDesired,PV(-1),12,(Cyclic.st)__AS__ImplInitDummyInit,CODE(0x18fc),19,(Init.st)Ratio2,PV(-1),8,(Cyclic.st)IncrementalRealTarget,PV(-1),12,(Cyclic.st)AverageSpeed2,PV(-1),12,(Cyclic.st)LastPosition2,PV(-1),3,(Cyclic.st)IBrakeReference,PV(-1),3,(Cyclic.st)AMoveLength2,PV(-1),3,(Cyclic.st)ActualSpeed2,PV(-1),12,(Cyclic.st)ActualDAC2,PV(-1),8,(Cyclic.st)StopWatch2,PV(-1),12,(Cyclic.st)MotionStatus1,PV(-1),8,(Cyclic.st)Counter2,PV(-1),8,(Cyclic.st)IMotion2Target,PV(-1),3,(Cyclic.st)DecelTime2,PV(-1),12,(Cyclic.st)FirstTarget2,PV(-1),11,(Cyclic.st)DecelDistance2,PV(-1),3,(Cyclic.st)BrakeTolerance,PV(-1),8,(Cyclic.st)_GLOBAL_OFFSET_TABLE_,PCREL(0x190f),0_GLOBAL_OFFSET_TABLE_,PCREL(0x18df),0_GLOBAL_OFFSET_TABLE_,PCREL(0x13),0|FILES|3|173|C:/Code/BandR Duct Line Project/Logical/IMotion2/Cyclic.stC:/Code/BandR Duct Line Project/Logical/IMotion2/Init.stC:/Code/BandR Duct Line Project/Logical/IMotion2/Exit.st|LINE|166|1733|C:/Code/BandR Duct Line Project/Logical/IMotion2/Cyclic.st|1|20|__AS__CyclicProgram3,23,04,66,07,93,08,119,09,136,010,170,011,201,012,236,013,247,018,261,019,306,021,338,023,352,024,380,026,417,027,431,028,466,030,489,034,507,035,538,037,556,038,591,040,609,041,651,045,681,046,708,047,735,048,858,049,981,050,1014,052,1057,053,1090,054,1211,055,1239,057,1358,058,1386,060,1424,061,1547,062,1606,063,1649,064,1676,065,1719,066,1745,067,1877,068,1908,071,1922,072,1932,073,1942,074,1953,075,2084,076,2111,078,2130,081,2149,084,2168,085,2197,086,2230,087,2265,088,2305,090,2425,093,2448,094,2462,095,2478,096,2489,097,2499,099,2518,0101,2547,0102,2579,0103,2607,0104,2621,0105,2654,0106,2672,0107,2686,0108,2714,0110,2730,0114,2746,0115,2873,0116,2913,0118,2936,0120,3041,0124,3060,0125,3087,0128,3112,0129,3146,0130,3157,0131,3188,0132,3223,0133,3237,0135,3248,0136,3262,0139,3295,0141,3311,0142,3340,0143,3373,0144,3416,0145,3535,0146,3658,0147,3668,0148,3687,0149,3716,0150,3749,0151,3792,0152,3911,0153,4034,0154,4044,0155,4063,0156,4092,0157,4111,0158,4233,0160,4357,0161,4368,0162,4396,0163,4407,0166,4426,0167,4436,0168,4471,0170,4594,0173,4617,0174,4646,0175,4665,0177,4676,0178,4695,0179,4821,0181,4944,0182,4955,0183,4983,0184,4994,0187,5013,0188,5023,0189,5065,0191,5189,0194,5219,0195,5248,0196,5370,0198,5494,0199,5510,0200,5552,0202,5568,0203,5597,0204,5630,0205,5672,0206,5712,0208,5839,0211,5869,0212,5883,0213,5899,0214,5910,0215,5920,0217,5939,0218,5968,0219,6008,0220,6043,0221,6054,0224,6073,0225,6084,0226,6112,0229,6123,0230,6158,0232,6176,0233,6218,0236,6243,0237,6298,0238,6309,0240,6325,0241,6335,0244,6345,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/IMotion2/Cyclic.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/IMotion2/Cyclic.st|__AS__CyclicProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/IMotion2/Init.st|1|18|__AS__InitProgram6,6379,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/IMotion2/Init.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/IMotion2/Init.st|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/IMotion2/Exit.st|1|18|__AS__ExitProgram6,6419,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/IMotion2/Exit.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/IMotion2/Exit.st|__AS__ExitProgram|