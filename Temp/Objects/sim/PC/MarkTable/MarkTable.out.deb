SECTIONS,12|INFO|7|104|GOT_COUNT,182GOT_DATA,3LOADERSTART,144EXIT_INIT,5319EXIT_CYCLIC,5285EXIT_EXIT,5359NO_DEBUG_INFO,0|GOT|182|6169|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0TOF,AVT + Name(-1),0f_trig,AVT + Name(-1),0MarkPusherStopDOB,PV(-1),11,(Cyclic.ld)MarkGateUpDwell,PV(-1),3,(Cyclic.ld)TableRev2,PV(-1),11,(Cyclic.ld)PSettled,PV(-1),11,(Cyclic.ld)Step13,PV(-1),11,(Cyclic.ld)Step5,PV(-1),11,(Cyclic.ld)tmMPSDelay,PV(-1),3,(Cyclic.ld)TON_6,PV(-1),58,(Cyclic.ld)zz000C00010008,PV(-1),3,(Cyclic.ld)Step7,PV(-1),11,(Cyclic.ld)zz000C00010006,PV(-1),3,(Cyclic.ld)zzBOOL00010011,PV(-1),11,(Cyclic.ld)SettleTime,PV(-1),3,(Cyclic.ld)zzBOOL00010021,PV(-1),11,(Cyclic.ld)zzRTR00001000C,PV(-1),78,(Cyclic.ld)MarkTableDecelDelay,PV(-1),3,(Cyclic.ld)TableFwd3,PV(-1),11,(Cyclic.ld)zzRTR000010012,PV(-1),84,(Cyclic.ld)TON_0,PV(-1),52,(Cyclic.ld)Psh8,PV(-1),11,(Cyclic.ld)Step15,PV(-1),11,(Cyclic.ld)MarkGateRaise,PV(-1),11,(Cyclic.ld)zzBOOL00010024,PV(-1),11,(Cyclic.ld)MarkTableFwd,PV(-1),11,(Cyclic.ld)MarkConveyorDelayFwd,PV(-1),11,(Cyclic.ld)ForwardDelay,PV(-1),3,(Cyclic.ld)zzBOOL00010014,PV(-1),11,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)zzBOOL0001001F,PV(-1),11,(Cyclic.ld)Step4,PV(-1),11,(Cyclic.ld)TOF_0,PV(-1),50,(Cyclic.ld)zzBOOL0001000C,PV(-1),11,(Cyclic.ld)Gate2,PV(-1),11,(Cyclic.ld)MarkPPauseDwell,PV(-1),3,(Cyclic.ld)zzRTR00001000A,PV(-1),76,(Cyclic.ld)zzBOOL0001001D,PV(-1),11,(Cyclic.ld)zzBOOL0001001A,PV(-1),11,(Cyclic.ld)tmMPS,PV(-1),3,(Cyclic.ld)Psh1,PV(-1),11,(Cyclic.ld)Step8,PV(-1),11,(Cyclic.ld)TableStyle3,PV(-1),11,(Cyclic.ld)zzBOOL0001000E,PV(-1),11,(Cyclic.ld)zzRTR00001000E,PV(-1),80,(Cyclic.ld)WaitDone,PV(-1),11,(Cyclic.ld)zz000C00010009,PV(-1),3,(Cyclic.ld)zzBOOL00010016,PV(-1),11,(Cyclic.ld)zzFTR000010001,PV(-1),64,(Cyclic.ld)DischargeMarkSide,PV(-1),11,(Cyclic.ld)Gate3,PV(-1),11,(Cyclic.ld)zzBOOL0001000F,PV(-1),11,(Cyclic.ld)TON_5,PV(-1),57,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)tmPPDwell,PV(-1),3,(Cyclic.ld)zzRTR000010000,PV(-1),66,(Cyclic.ld)Psh2,PV(-1),11,(Cyclic.ld)PshStopDelayTmrDone,PV(-1),11,(Cyclic.ld)MarkPushComplete,PV(-1),11,(Cyclic.ld)zzRTR000010002,PV(-1),68,(Cyclic.ld)SetupPushers,PV(-1),11,(Cyclic.ld)zz000C00010003,PV(-1),3,(Cyclic.ld)zzBOOL00010026,PV(-1),11,(Cyclic.ld)zzRTR000010010,PV(-1),82,(Cyclic.ld)zzBOOL00010017,PV(-1),11,(Cyclic.ld)GateLowerDelay,PV(-1),3,(Cyclic.ld)MarkPStopDelay,PV(-1),3,(Cyclic.ld)zz000C00010001,PV(-1),3,(Cyclic.ld)TON_3,PV(-1),55,(Cyclic.ld)zzBOOL00010012,PV(-1),11,(Cyclic.ld)DirectionDelay,PV(-1),11,(Cyclic.ld)Step12,PV(-1),11,(Cyclic.ld)MarkPshrHome,PV(-1),11,(Cyclic.ld)TON_1,PV(-1),53,(Cyclic.ld)Psh6,PV(-1),11,(Cyclic.ld)Psh9,PV(-1),11,(Cyclic.ld)zz000C00010005,PV(-1),3,(Cyclic.ld)DischargeTDCEnd,PV(-1),11,(Cyclic.ld)TableRev3,PV(-1),11,(Cyclic.ld)zz000C0001000A,PV(-1),3,(Cyclic.ld)zzBOOL00010020,PV(-1),11,(Cyclic.ld)zzRTR00001000B,PV(-1),77,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)Step3,PV(-1),11,(Cyclic.ld)ReverseDelay,PV(-1),3,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)zzFTR000010000,PV(-1),63,(Cyclic.ld)zzBOOL00010013,PV(-1),11,(Cyclic.ld)zzBOOL0001001E,PV(-1),11,(Cyclic.ld)Step1,PV(-1),11,(Cyclic.ld)TableStyle2,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)zzRTR000010005,PV(-1),71,(Cyclic.ld)Psh4,PV(-1),11,(Cyclic.ld)MarkTransferModel,PV(-1),3,(Cyclic.ld)TOF_1,PV(-1),51,(Cyclic.ld)zzBOOL0001000A,PV(-1),11,(Cyclic.ld)Psh10,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),54,(Cyclic.ld)Step11,PV(-1),11,(Cyclic.ld)MatlAtMarkTable,PV(-1),11,(Cyclic.ld)PusherOffDelay,PV(-1),3,(Cyclic.ld)TON_9,PV(-1),61,(Cyclic.ld)TON_10,PV(-1),53,(Cyclic.ld)zzBOOL0001000D,PV(-1),11,(Cyclic.ld)MarkTableStart,PV(-1),11,(Cyclic.ld)MarkPStartDelay,PV(-1),3,(Cyclic.ld)Psh3,PV(-1),11,(Cyclic.ld)zzRTR000010008,PV(-1),74,(Cyclic.ld)zzRTR000010006,PV(-1),72,(Cyclic.ld)zzRTR000010003,PV(-1),69,(Cyclic.ld)Psh11,PV(-1),11,(Cyclic.ld)zzBOOL00010022,PV(-1),11,(Cyclic.ld)PshStartTmrDone,PV(-1),11,(Cyclic.ld)zz000C00010004,PV(-1),3,(Cyclic.ld)zzBOOL00010010,PV(-1),11,(Cyclic.ld)PshStageTmrDone,PV(-1),11,(Cyclic.ld)truepart,PV(-1),11,(Cyclic.ld)MarkPshrFwd,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0x14ce),19,(Init.ld)MarkPusherReverse,PV(-1),11,(Cyclic.ld)zz000C00010007,PV(-1),3,(Cyclic.ld)GateReset,PV(-1),11,(Cyclic.ld)zzBOOL00010025,PV(-1),11,(Cyclic.ld)MarkTableStop,PV(-1),11,(Cyclic.ld)Step2,PV(-1),11,(Cyclic.ld)PushReverse,PV(-1),11,(Cyclic.ld)tmDirectionDelay,PV(-1),3,(Cyclic.ld)GateUpTime,PV(-1),3,(Cyclic.ld)Step14,PV(-1),11,(Cyclic.ld)PushValve2,PV(-1),11,(Cyclic.ld)zz000C00010000,PV(-1),3,(Cyclic.ld)MarkPusherStop,PV(-1),11,(Cyclic.ld)zzRTR00001000F,PV(-1),81,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0x14d8),19,(Init.ld)TON_4,PV(-1),56,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)zzBOOL00010019,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)PshPauseTmrDone,PV(-1),11,(Cyclic.ld)PushValve3,PV(-1),11,(Cyclic.ld)zzBOOL0001001B,PV(-1),11,(Cyclic.ld)Step9,PV(-1),11,(Cyclic.ld)zzBOOL0001000B,PV(-1),11,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)TON_8,PV(-1),60,(Cyclic.ld)DuctSelected,PV(-1),11,(Cyclic.ld)tmMPSD,PV(-1),3,(Cyclic.ld)BackUpParts,PV(-1),11,(Cyclic.ld)zzBOOL0001001C,PV(-1),11,(Cyclic.ld)Psh5,PV(-1),11,(Cyclic.ld)truepartoff,PV(-1),11,(Cyclic.ld)DischargeTDCSide,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)Step6,PV(-1),11,(Cyclic.ld)zzRTR00001000D,PV(-1),79,(Cyclic.ld)ULineSelected,PV(-1),11,(Cyclic.ld)MarkTTPusherJogRevPB,PV(-1),11,(Cyclic.ld)TableFwd2,PV(-1),11,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)zzBOOL00010015,PV(-1),11,(Cyclic.ld)zzRTR000010001,PV(-1),67,(Cyclic.ld)zzRTR000010004,PV(-1),70,(Cyclic.ld)TON_7,PV(-1),59,(Cyclic.ld)zzFTR000010002,PV(-1),65,(Cyclic.ld)zzRTR000010011,PV(-1),83,(Cyclic.ld)MarkTableOn,PV(-1),11,(Cyclic.ld)zzRTR000010009,PV(-1),75,(Cyclic.ld)MarkPStageTime,PV(-1),3,(Cyclic.ld)zzRTR000010007,PV(-1),73,(Cyclic.ld)zzBOOL00010018,PV(-1),11,(Cyclic.ld)zzBOOL00010023,PV(-1),11,(Cyclic.ld)MarkTableRev,PV(-1),11,(Cyclic.ld)zz000C00010002,PV(-1),3,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0x14eb),0_GLOBAL_OFFSET_TABLE_,PCREL(0x14bb),0_GLOBAL_OFFSET_TABLE_,PCREL(0x63),0|FILES|3|197|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Cyclic.ldC:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Init.ldC:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Exit.ld|LINE|226|2433|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Cyclic.ld|1|20|__AS__CyclicProgram1,103,03,120,04,139,011,198,019,258,021,269,022,277,026,313,028,314,030,331,031,350,034,381,035,389,039,415,041,416,043,433,044,452,051,524,056,567,061,610,066,653,071,696,076,739,081,782,083,799,084,818,089,862,097,924,099,941,0100,960,0107,1032,0112,1075,0117,1118,0122,1161,0129,1223,0136,1293,0137,1301,0139,1319,0141,1335,0142,1354,0144,1372,0146,1373,0148,1390,0149,1409,0151,1427,0152,1435,0156,1461,0158,1462,0160,1479,0161,1498,0163,1516,0164,1524,0168,1550,0170,1551,0179,1638,0180,1646,0182,1664,0184,1677,0185,1696,0187,1714,0189,1715,0194,1770,0195,1778,0197,1796,0199,1809,0200,1828,0202,1846,0204,1847,0211,1917,0212,1925,0214,1943,0216,1959,0217,1978,0219,1996,0221,1997,0224,2022,0225,2030,0227,2048,0229,2064,0230,2083,0232,2101,0234,2102,0237,2119,0244,2183,0253,2260,0257,2290,0261,2322,0263,2339,0264,2358,0266,2375,0267,2394,0269,2411,0270,2430,0277,2491,0286,2579,0293,2637,0295,2654,0296,2673,0298,2690,0299,2709,0308,2784,0310,2801,0311,2820,0320,2894,0322,2911,0323,2930,0328,2974,0332,3004,0334,3021,0335,3040,0337,3058,0338,3066,0342,3092,0344,3093,0347,3118,0348,3126,0350,3144,0352,3160,0353,3179,0355,3197,0357,3198,0359,3215,0360,3234,0362,3252,0363,3260,0367,3286,0369,3287,0372,3312,0373,3320,0375,3338,0377,3354,0378,3373,0380,3391,0382,3392,0384,3409,0385,3428,0387,3446,0388,3454,0392,3480,0394,3481,0397,3506,0398,3514,0400,3532,0402,3548,0403,3567,0405,3585,0407,3586,0416,3672,0421,3717,0426,3760,0430,3790,0432,3807,0433,3826,0435,3844,0436,3852,0440,3878,0442,3879,0444,3896,0445,3904,0447,3920,0448,3939,0450,3957,0452,3958,0457,4003,0461,4033,0466,4080,0468,4091,0469,4099,0472,4135,0474,4136,0476,4153,0477,4172,0480,4203,0481,4211,0485,4237,0487,4238,0492,4289,0493,4297,0495,4315,0497,4331,0498,4350,0500,4368,0502,4369,0504,4386,0505,4405,0508,4436,0509,4444,0513,4470,0515,4471,0521,4533,0522,4541,0523,4560,0525,4578,0527,4579,0529,4596,0530,4615,0533,4646,0534,4654,0538,4680,0540,4681,0544,4719,0545,4727,0547,4745,0549,4761,0550,4780,0552,4798,0554,4799,0556,4816,0557,4835,0560,4866,0561,4874,0565,4900,0567,4901,0570,4926,0571,4934,0573,4952,0575,4968,0576,4987,0578,5005,0580,5006,0586,5053,0593,5111,0600,5169,0607,5227,0613,5285,0|TYPE|49|1466|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Cyclic.ld|__AS__CyclicProgram||LINE|2|27|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Init.ld|1|18|__AS__InitProgram2,5319,0|TYPE|49|1466|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Init.ld|__AS__InitProgram||LINE|2|27|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Exit.ld|1|18|__AS__ExitProgram2,5359,0|TYPE|49|1466|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/code/BandR Projects/X20_CPU/X20_CPU/Logical/MarkTable/Exit.ld|__AS__ExitProgram|