SECTIONS,12|INFO|7|104|GOT_COUNT,180GOT_DATA,3LOADERSTART,144EXIT_INIT,5455EXIT_CYCLIC,5420EXIT_EXIT,5495NO_DEBUG_INFO,0|GOT|180|6078|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0TOF,AVT + Name(-1),0f_trig,AVT + Name(-1),0MarkPusherStopDOB,PV(-1),11,(Cyclic.ld)MarkGateUpDwell,PV(-1),3,(Cyclic.ld)TableRev2,PV(-1),11,(Cyclic.ld)PSettled,PV(-1),11,(Cyclic.ld)Step13,PV(-1),11,(Cyclic.ld)Step5,PV(-1),11,(Cyclic.ld)tmMPSDelay,PV(-1),3,(Cyclic.ld)TON_6,PV(-1),58,(Cyclic.ld)zz000C00010008,PV(-1),3,(Cyclic.ld)Step7,PV(-1),11,(Cyclic.ld)zz000C00010006,PV(-1),3,(Cyclic.ld)zzBOOL00010011,PV(-1),11,(Cyclic.ld)SettleTime,PV(-1),3,(Cyclic.ld)zzRTR00001000C,PV(-1),79,(Cyclic.ld)MarkTableDecelDelay,PV(-1),3,(Cyclic.ld)TableFwd3,PV(-1),11,(Cyclic.ld)zzRTR000010012,PV(-1),85,(Cyclic.ld)TON_0,PV(-1),52,(Cyclic.ld)Psh8,PV(-1),11,(Cyclic.ld)Step15,PV(-1),11,(Cyclic.ld)MarkGateRaise,PV(-1),11,(Cyclic.ld)MarkTableFwd,PV(-1),11,(Cyclic.ld)MarkConveyorDelayFwd,PV(-1),11,(Cyclic.ld)ForwardDelay,PV(-1),3,(Cyclic.ld)zzBOOL00010014,PV(-1),11,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)Step4,PV(-1),11,(Cyclic.ld)TOF_0,PV(-1),50,(Cyclic.ld)zzBOOL0001000C,PV(-1),11,(Cyclic.ld)Gate2,PV(-1),11,(Cyclic.ld)MarkPPauseDwell,PV(-1),3,(Cyclic.ld)zzRTR00001000A,PV(-1),77,(Cyclic.ld)zzBOOL0001001D,PV(-1),11,(Cyclic.ld)zzBOOL0001001A,PV(-1),11,(Cyclic.ld)tmMPS,PV(-1),3,(Cyclic.ld)Psh1,PV(-1),11,(Cyclic.ld)Step8,PV(-1),11,(Cyclic.ld)TableStyle3,PV(-1),11,(Cyclic.ld)zzBOOL0001000E,PV(-1),11,(Cyclic.ld)zzRTR00001000E,PV(-1),81,(Cyclic.ld)WaitDone,PV(-1),11,(Cyclic.ld)zz000C00010009,PV(-1),3,(Cyclic.ld)zzBOOL00010016,PV(-1),11,(Cyclic.ld)zzFTR000010001,PV(-1),65,(Cyclic.ld)DischargeMarkSide,PV(-1),11,(Cyclic.ld)Gate3,PV(-1),11,(Cyclic.ld)zzBOOL0001000F,PV(-1),11,(Cyclic.ld)TON_5,PV(-1),57,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)tmPPDwell,PV(-1),3,(Cyclic.ld)zzRTR000010000,PV(-1),67,(Cyclic.ld)Psh2,PV(-1),11,(Cyclic.ld)PshStopDelayTmrDone,PV(-1),11,(Cyclic.ld)MarkPushComplete,PV(-1),11,(Cyclic.ld)zzRTR000010002,PV(-1),69,(Cyclic.ld)SetupPushers,PV(-1),11,(Cyclic.ld)zz000C00010003,PV(-1),3,(Cyclic.ld)zzRTR000010010,PV(-1),83,(Cyclic.ld)zzBOOL00010017,PV(-1),11,(Cyclic.ld)GateLowerDelay,PV(-1),3,(Cyclic.ld)MarkPStopDelay,PV(-1),3,(Cyclic.ld)zz000C00010001,PV(-1),3,(Cyclic.ld)TON_3,PV(-1),55,(Cyclic.ld)zzBOOL00010012,PV(-1),11,(Cyclic.ld)DirectionDelay,PV(-1),11,(Cyclic.ld)Step12,PV(-1),11,(Cyclic.ld)Mark3PusherHome,PV(-1),11,(Cyclic.ld)MarkPshrHome,PV(-1),11,(Cyclic.ld)zzRTR000010013,PV(-1),86,(Cyclic.ld)TON_1,PV(-1),53,(Cyclic.ld)Psh6,PV(-1),11,(Cyclic.ld)Psh9,PV(-1),11,(Cyclic.ld)zz000C00010005,PV(-1),3,(Cyclic.ld)MarkPushReady,PV(-1),11,(Cyclic.ld)DischargeTDCEnd,PV(-1),11,(Cyclic.ld)TableRev3,PV(-1),11,(Cyclic.ld)zz000C0001000A,PV(-1),3,(Cyclic.ld)zzRTR00001000B,PV(-1),78,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)Step3,PV(-1),11,(Cyclic.ld)ReverseDelay,PV(-1),3,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)zzFTR000010000,PV(-1),64,(Cyclic.ld)zzBOOL00010013,PV(-1),11,(Cyclic.ld)Step1,PV(-1),11,(Cyclic.ld)TableStyle2,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)zzRTR000010005,PV(-1),72,(Cyclic.ld)Psh4,PV(-1),11,(Cyclic.ld)MarkTransferModel,PV(-1),3,(Cyclic.ld)TOF_1,PV(-1),51,(Cyclic.ld)zzBOOL0001000A,PV(-1),11,(Cyclic.ld)Psh10,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),54,(Cyclic.ld)Step11,PV(-1),11,(Cyclic.ld)MatlAtMarkTable,PV(-1),11,(Cyclic.ld)PusherOffDelay,PV(-1),3,(Cyclic.ld)TON_9,PV(-1),61,(Cyclic.ld)MPRTime,PV(-1),3,(Cyclic.ld)TON_10,PV(-1),53,(Cyclic.ld)zzBOOL0001000D,PV(-1),11,(Cyclic.ld)MarkTableStart,PV(-1),11,(Cyclic.ld)MarkPStartDelay,PV(-1),3,(Cyclic.ld)Psh3,PV(-1),11,(Cyclic.ld)zzRTR000010008,PV(-1),75,(Cyclic.ld)zzRTR000010006,PV(-1),73,(Cyclic.ld)zzRTR000010003,PV(-1),70,(Cyclic.ld)Psh11,PV(-1),11,(Cyclic.ld)PshStartTmrDone,PV(-1),11,(Cyclic.ld)zz000C00010004,PV(-1),3,(Cyclic.ld)zzBOOL00010010,PV(-1),11,(Cyclic.ld)PshStageTmrDone,PV(-1),11,(Cyclic.ld)truepart,PV(-1),11,(Cyclic.ld)MarkPshrFwd,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0x1556),19,(Init.ld)MarkPusherReverse,PV(-1),11,(Cyclic.ld)zz000C00010007,PV(-1),3,(Cyclic.ld)GateReset,PV(-1),11,(Cyclic.ld)MarkTableStop,PV(-1),11,(Cyclic.ld)Step2,PV(-1),11,(Cyclic.ld)PushReverse,PV(-1),11,(Cyclic.ld)tmDirectionDelay,PV(-1),3,(Cyclic.ld)GateUpTime,PV(-1),3,(Cyclic.ld)Step14,PV(-1),11,(Cyclic.ld)PushValve2,PV(-1),11,(Cyclic.ld)zz000C00010000,PV(-1),3,(Cyclic.ld)zz000C0001000B,PV(-1),3,(Cyclic.ld)MarkPusherStop,PV(-1),11,(Cyclic.ld)zzRTR00001000F,PV(-1),82,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0x1560),19,(Init.ld)TON_4,PV(-1),56,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)zzBOOL00010019,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)PshPauseTmrDone,PV(-1),11,(Cyclic.ld)PushValve3,PV(-1),11,(Cyclic.ld)zzBOOL0001001B,PV(-1),11,(Cyclic.ld)Step9,PV(-1),11,(Cyclic.ld)zzBOOL0001000B,PV(-1),11,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)TON_8,PV(-1),60,(Cyclic.ld)DuctSelected,PV(-1),11,(Cyclic.ld)tmMPSD,PV(-1),3,(Cyclic.ld)BackUpParts,PV(-1),11,(Cyclic.ld)zzBOOL0001001C,PV(-1),11,(Cyclic.ld)Psh5,PV(-1),11,(Cyclic.ld)MarkTableLatch,PV(-1),11,(Cyclic.ld)truepartoff,PV(-1),11,(Cyclic.ld)DischargeTDCSide,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)Step6,PV(-1),11,(Cyclic.ld)zzRTR00001000D,PV(-1),80,(Cyclic.ld)ULineSelected,PV(-1),11,(Cyclic.ld)MarkTTPusherJogRevPB,PV(-1),11,(Cyclic.ld)TableFwd2,PV(-1),11,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)zzBOOL00010015,PV(-1),11,(Cyclic.ld)zzRTR000010001,PV(-1),68,(Cyclic.ld)zzRTR000010004,PV(-1),71,(Cyclic.ld)TON_7,PV(-1),59,(Cyclic.ld)zzFTR000010002,PV(-1),66,(Cyclic.ld)TON_13,PV(-1),53,(Cyclic.ld)zzRTR000010011,PV(-1),84,(Cyclic.ld)MarkTableOn,PV(-1),11,(Cyclic.ld)zzRTR000010009,PV(-1),76,(Cyclic.ld)MarkPStageTime,PV(-1),3,(Cyclic.ld)zzRTR000010007,PV(-1),74,(Cyclic.ld)zzBOOL00010018,PV(-1),11,(Cyclic.ld)MarkTableRev,PV(-1),11,(Cyclic.ld)zz000C00010002,PV(-1),3,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0x1573),0_GLOBAL_OFFSET_TABLE_,PCREL(0x1543),0_GLOBAL_OFFSET_TABLE_,PCREL(0x63),0|FILES|3|176|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ldC:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ldC:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|LINE|244|2629|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ld|1|20|__AS__CyclicProgram1,103,05,133,07,150,08,169,013,213,021,273,023,284,024,292,028,328,030,329,032,346,033,365,036,396,037,404,041,430,043,431,045,448,046,467,053,539,058,582,063,625,068,668,073,711,078,754,083,797,085,814,086,833,091,877,099,939,0101,956,0102,975,0109,1047,0114,1090,0119,1133,0124,1176,0131,1238,0133,1249,0134,1257,0137,1290,0139,1306,0140,1325,0142,1343,0144,1344,0146,1361,0147,1380,0149,1398,0150,1406,0154,1432,0156,1433,0158,1450,0159,1469,0161,1487,0162,1495,0166,1521,0168,1522,0170,1533,0171,1541,0179,1621,0181,1634,0182,1653,0184,1671,0186,1672,0188,1683,0189,1691,0193,1739,0195,1752,0196,1771,0198,1789,0200,1790,0202,1801,0203,1809,0209,1872,0211,1888,0212,1907,0214,1925,0216,1926,0218,1937,0219,1945,0221,1963,0223,1979,0224,1998,0226,2016,0228,2017,0231,2034,0238,2098,0247,2175,0251,2205,0255,2237,0257,2254,0258,2273,0260,2290,0261,2309,0263,2326,0264,2345,0271,2406,0280,2494,0287,2552,0289,2569,0290,2588,0292,2605,0293,2624,0302,2699,0304,2716,0305,2735,0314,2809,0316,2826,0317,2845,0322,2889,0326,2919,0328,2936,0329,2955,0331,2973,0332,2981,0336,3007,0338,3008,0340,3019,0341,3027,0343,3045,0345,3061,0346,3080,0348,3098,0350,3099,0352,3116,0353,3135,0355,3153,0356,3161,0360,3187,0362,3188,0364,3199,0365,3207,0367,3225,0369,3241,0370,3260,0372,3278,0374,3279,0376,3296,0377,3315,0379,3333,0380,3341,0384,3367,0386,3368,0388,3379,0389,3387,0391,3405,0393,3421,0394,3440,0396,3458,0398,3459,0407,3545,0412,3590,0417,3633,0421,3663,0423,3680,0424,3699,0426,3717,0427,3725,0431,3751,0433,3752,0435,3763,0436,3771,0438,3789,0440,3805,0441,3824,0443,3842,0445,3843,0450,3888,0454,3918,0459,3965,0461,3976,0462,3984,0465,4020,0467,4021,0469,4038,0470,4057,0473,4088,0474,4096,0478,4122,0480,4123,0482,4134,0483,4142,0487,4186,0489,4202,0490,4221,0492,4239,0494,4240,0496,4257,0497,4276,0500,4307,0501,4315,0505,4341,0507,4342,0509,4353,0510,4361,0516,4424,0518,4440,0519,4459,0521,4477,0523,4478,0525,4495,0526,4514,0529,4545,0530,4553,0534,4579,0536,4580,0538,4597,0539,4616,0542,4647,0543,4655,0547,4681,0549,4682,0551,4693,0552,4701,0555,4732,0557,4748,0558,4767,0560,4785,0562,4786,0564,4797,0565,4805,0568,4836,0570,4852,0571,4871,0573,4889,0575,4890,0577,4907,0578,4926,0581,4957,0582,4965,0586,4991,0588,4992,0590,5003,0591,5011,0593,5029,0595,5045,0596,5064,0598,5082,0600,5083,0606,5130,0613,5188,0620,5246,0627,5304,0633,5362,0639,5420,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ld|__AS__CyclicProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ld|1|18|__AS__InitProgram2,5455,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ld|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|1|18|__AS__ExitProgram2,5495,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|__AS__ExitProgram|