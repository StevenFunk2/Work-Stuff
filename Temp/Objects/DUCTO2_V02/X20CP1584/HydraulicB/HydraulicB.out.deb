SECTIONS,12|INFO|7|104|GOT_COUNT,148GOT_DATA,3LOADERSTART,144EXIT_INIT,4227EXIT_CYCLIC,4191EXIT_EXIT,4267NO_DEBUG_INFO,0|GOT|148|5264|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0MovePlus4,PV(-1),11,(Cyclic.ld)WBBrakeRequiredStep,PV(-1),11,(Cyclic.ld)TON_6,PV(-1),56,(Cyclic.ld)BC_Home2,PV(-1),11,(Cyclic.ld)zzBOOL00010011,PV(-1),11,(Cyclic.ld)SettleTime,PV(-1),3,(Cyclic.ld)zz000800010002,PV(-1),12,(Cyclic.ld)zzRTR00001000C,PV(-1),70,(Cyclic.ld)TON_0,PV(-1),55,(Cyclic.ld)BeginEjectStep,PV(-1),11,(Cyclic.ld)BrakeOn,PV(-1),11,(Cyclic.ld)BrakeCarriageJogOut,PV(-1),11,(Cyclic.ld)BrakeCarriageTarget,PV(-1),12,(Cyclic.ld)zzBOOL00010014,PV(-1),11,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)zzBOOL0001000C,PV(-1),11,(Cyclic.ld)zz000800010006,PV(-1),12,(Cyclic.ld)BSWReal,PV(-1),12,(Cyclic.ld)WBArmsUpStep,PV(-1),11,(Cyclic.ld)PositioningError1,PV(-1),11,(Cyclic.ld)BrakeEncoderReset,PV(-1),11,(Cyclic.ld)zzRTR00001000A,PV(-1),68,(Cyclic.ld)AbsDifference,PV(-1),12,(Cyclic.ld)zzBOOL0001001A,PV(-1),11,(Cyclic.ld)MoveMinus3,PV(-1),11,(Cyclic.ld)BPositionUpdateDelayDone,PV(-1),11,(Cyclic.ld)MoveMinus4,PV(-1),11,(Cyclic.ld)BrakeAuto,PV(-1),11,(Cyclic.ld)BCReverseTravelLimit,PV(-1),11,(Cyclic.ld)zzBOOL0001000E,PV(-1),11,(Cyclic.ld)zzRTR00001000E,PV(-1),72,(Cyclic.ld)BC_Home4,PV(-1),11,(Cyclic.ld)zz000800010005,PV(-1),12,(Cyclic.ld)zzBOOL00010016,PV(-1),11,(Cyclic.ld)BrakeHighSpeedRelay,PV(-1),11,(Cyclic.ld)BrakeTargetWindow,PV(-1),3,(Cyclic.ld)RealBrakePosition,PV(-1),12,(Cyclic.ld)zzBOOL0001000F,PV(-1),11,(Cyclic.ld)TON_5,PV(-1),54,(Cyclic.ld)BrakeCarriageJogIn,PV(-1),11,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)WBBendingStep,PV(-1),11,(Cyclic.ld)MVPlusUnlatch,PV(-1),11,(Cyclic.ld)zzRTR000010000,PV(-1),58,(Cyclic.ld)zzRTR000010002,PV(-1),60,(Cyclic.ld)HWBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)CarriageReference,PV(-1),11,(Cyclic.ld)WBCarriageReturnStep,PV(-1),11,(Cyclic.ld)InSSWindow,PV(-1),11,(Cyclic.ld)zzBOOL00010017,PV(-1),11,(Cyclic.ld)PlusStop,PV(-1),11,(Cyclic.ld)TON_3,PV(-1),52,(Cyclic.ld)InPosWindow,PV(-1),11,(Cyclic.ld)LBrakeWithPLC,PV(-1),11,(Cyclic.ld)WBReadyToCycleStep,PV(-1),11,(Cyclic.ld)BC_Home1,PV(-1),11,(Cyclic.ld)zzBOOL00010012,PV(-1),11,(Cyclic.ld)LLimit,PV(-1),12,(Cyclic.ld)BrakeRefSignal,PV(-1),11,(Cyclic.ld)BrakeResolution,PV(-1),12,(Cyclic.ld)BrakeSpeedSwitch,PV(-1),11,(Cyclic.ld)TON_1,PV(-1),50,(Cyclic.ld)DecelDone2,PV(-1),11,(Cyclic.ld)ULimit,PV(-1),12,(Cyclic.ld)HWBrakeWithPLC,PV(-1),11,(Cyclic.ld)zzRTR00001000B,PV(-1),69,(Cyclic.ld)BCForwardTravelLimit,PV(-1),11,(Cyclic.ld)MovePlus1,PV(-1),11,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)ROffSignal,PV(-1),11,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)zzBOOL00010013,PV(-1),11,(Cyclic.ld)MoveMinus1,PV(-1),11,(Cyclic.ld)DifferenceGreaterThan0,PV(-1),11,(Cyclic.ld)LBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)HWBrakeHomed,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)zzRTR000010005,PV(-1),63,(Cyclic.ld)realBTW,PV(-1),12,(Cyclic.ld)SSWin,PV(-1),12,(Cyclic.ld)zzBOOL0001000A,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),51,(Cyclic.ld)BC_Home3,PV(-1),11,(Cyclic.ld)BrakeSlowWindow,PV(-1),3,(Cyclic.ld)zzBOOL0001000D,PV(-1),11,(Cyclic.ld)CarriagePositionUpdateDwell,PV(-1),11,(Cyclic.ld)zz000800010004,PV(-1),12,(Cyclic.ld)zz000800010000,PV(-1),12,(Cyclic.ld)zzRTR000010008,PV(-1),66,(Cyclic.ld)WBBendSeqStartStep,PV(-1),11,(Cyclic.ld)zzRTR000010006,PV(-1),64,(Cyclic.ld)Difference,PV(-1),12,(Cyclic.ld)zzRTR000010003,PV(-1),61,(Cyclic.ld)MVMinusUnlatch,PV(-1),11,(Cyclic.ld)zzBOOL00010010,PV(-1),11,(Cyclic.ld)MovePlus2,PV(-1),11,(Cyclic.ld)BrakeIsRefed,PV(-1),11,(Cyclic.ld)MoveToBeam,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0x108a),19,(Init.ld)zz000800010003,PV(-1),12,(Cyclic.ld)MovePlus3,PV(-1),11,(Cyclic.ld)BrakeBeamUpProx,PV(-1),11,(Cyclic.ld)MinusStop,PV(-1),11,(Cyclic.ld)SetLBrakeCarriage,PV(-1),11,(Cyclic.ld)BendStart,PV(-1),11,(Cyclic.ld)PositioningError2,PV(-1),11,(Cyclic.ld)MoveAwayBeam,PV(-1),11,(Cyclic.ld)DecelDone1,PV(-1),11,(Cyclic.ld)WBNotInPositionStep,PV(-1),11,(Cyclic.ld)MCLessThan0,PV(-1),11,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0x1094),19,(Init.ld)TON_4,PV(-1),53,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)zzBOOL00010019,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)zzBOOL0001001B,PV(-1),11,(Cyclic.ld)zzBOOL0001000B,PV(-1),11,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)MoveCarriage,PV(-1),11,(Cyclic.ld)HWBCarriageInPosition,PV(-1),11,(Cyclic.ld)FBBrakeSetSignal,PV(-1),11,(Cyclic.ld)MoveMinus2,PV(-1),11,(Cyclic.ld)MaterialClamped,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)zzRTR00001000D,PV(-1),71,(Cyclic.ld)BC_Home5,PV(-1),11,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)zzBOOL00010015,PV(-1),11,(Cyclic.ld)zzRTR000010001,PV(-1),59,(Cyclic.ld)zzRTR000010004,PV(-1),62,(Cyclic.ld)TON_7,PV(-1),57,(Cyclic.ld)WBPartPastStep,PV(-1),11,(Cyclic.ld)Move4HWBwoPLC,PV(-1),11,(Cyclic.ld)WBOpenClampStep,PV(-1),11,(Cyclic.ld)zz000800010001,PV(-1),12,(Cyclic.ld)EjectComplete,PV(-1),11,(Cyclic.ld)zzRTR000010009,PV(-1),67,(Cyclic.ld)BrakeRequired,PV(-1),11,(Cyclic.ld)zzRTR000010007,PV(-1),65,(Cyclic.ld)zzBOOL00010018,PV(-1),11,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0x10a7),0_GLOBAL_OFFSET_TABLE_,PCREL(0x1077),0_GLOBAL_OFFSET_TABLE_,PCREL(0x43),0|FILES|3|215|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Cyclic.ldC:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Init.ldC:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Exit.ld|LINE|169|1795|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Cyclic.ld|1|20|__AS__CyclicProgram1,71,06,116,09,133,018,219,027,305,029,322,030,341,043,458,048,501,053,544,058,587,063,630,065,641,066,649,068,669,070,682,071,701,073,719,075,720,077,731,078,739,080,757,082,770,083,789,085,807,087,808,089,819,090,827,092,845,094,858,095,877,097,895,099,896,0102,913,0106,945,0112,990,0114,1007,0115,1026,0117,1043,0118,1062,0120,1079,0121,1098,0123,1115,0124,1134,0126,1151,0127,1170,0137,1250,0139,1267,0140,1286,0142,1304,0143,1312,0146,1353,0148,1354,0150,1371,0151,1390,0154,1416,0155,1424,0159,1460,0160,1461,0162,1478,0163,1486,0167,1522,0169,1523,0171,1534,0172,1542,0176,1578,0178,1579,0180,1590,0181,1598,0185,1626,0187,1627,0189,1638,0190,1646,0193,1686,0195,1687,0197,1698,0198,1706,0201,1739,0203,1752,0204,1771,0206,1789,0208,1790,0210,1801,0211,1809,0214,1849,0216,1850,0218,1861,0219,1869,0222,1909,0224,1910,0226,1921,0227,1929,0230,1969,0232,1970,0234,1987,0235,2006,0241,2052,0243,2063,0244,2071,0247,2105,0249,2106,0256,2177,0261,2220,0263,2237,0264,2256,0269,2300,0274,2343,0276,2354,0277,2362,0279,2380,0281,2396,0282,2415,0284,2433,0286,2434,0288,2451,0289,2470,0295,2516,0297,2527,0298,2535,0301,2569,0303,2570,0305,2587,0306,2606,0313,2678,0318,2721,0320,2738,0321,2757,0326,2801,0331,2844,0333,2855,0334,2863,0336,2881,0338,2897,0339,2916,0341,2934,0343,2935,0345,2952,0346,2971,0348,2989,0349,2997,0353,3028,0355,3029,0357,3046,0358,3065,0360,3083,0361,3091,0364,3127,0366,3128,0368,3139,0369,3147,0371,3167,0373,3180,0374,3199,0376,3217,0378,3218,0407,3537,0409,3548,0410,3556,0412,3576,0414,3589,0415,3608,0417,3626,0419,3627,0420,3628,0442,3868,0465,4101,0471,4146,0475,4191,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Cyclic.ld|__AS__CyclicProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Init.ld|1|18|__AS__InitProgram2,4227,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Init.ld|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Exit.ld|1|18|__AS__ExitProgram2,4267,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/HydraulicBrakeCarriage/Exit.ld|__AS__ExitProgram|