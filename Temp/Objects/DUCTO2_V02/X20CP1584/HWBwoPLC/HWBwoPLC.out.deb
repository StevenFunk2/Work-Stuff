SECTIONS,12|INFO|7|104|GOT_COUNT,104GOT_DATA,3LOADERSTART,144EXIT_INIT,3083EXIT_CYCLIC,3049EXIT_EXIT,3123NO_DEBUG_INFO,0|GOT|104|3681|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0WBBrakeRequiredStep,PV(-1),11,(Cyclic.ld)TON_6,PV(-1),56,(Cyclic.ld)TON_0,PV(-1),50,(Cyclic.ld)LBWN12,PV(-1),11,(Cyclic.ld)WB1BendDoneStep,PV(-1),11,(Cyclic.ld)BeginEjectStep,PV(-1),11,(Cyclic.ld)WBCloseClampStep,PV(-1),11,(Cyclic.ld)LBWN3,PV(-1),11,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)WBPreset3,PV(-1),3,(Cyclic.ld)ReturnMoveStart,PV(-1),11,(Cyclic.ld)StartBeltTimerDone,PV(-1),11,(Cyclic.ld)TrailDelay1Done,PV(-1),11,(Cyclic.ld)LBWN5,PV(-1),11,(Cyclic.ld)WBArmsUpStep,PV(-1),11,(Cyclic.ld)BrakeAuto,PV(-1),11,(Cyclic.ld)PositionGreaterThan12,PV(-1),11,(Cyclic.ld)WBAutoStep,PV(-1),11,(Cyclic.ld)BendInProcess,PV(-1),11,(Cyclic.ld)BendingAgain,PV(-1),11,(Cyclic.ld)WBSequenceComplete,PV(-1),11,(Cyclic.ld)LBPartSquared,PV(-1),11,(Cyclic.ld)LBWN11,PV(-1),11,(Cyclic.ld)BrakePartPresent,PV(-1),11,(Cyclic.ld)RealBrakePosition,PV(-1),12,(Cyclic.ld)TON_5,PV(-1),55,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)BrakeLeafHomeProx,PV(-1),11,(Cyclic.ld)WBBendingStep,PV(-1),11,(Cyclic.ld)EjectDwellDone,PV(-1),11,(Cyclic.ld)LBWN2,PV(-1),11,(Cyclic.ld)zzRTR000010000,PV(-1),58,(Cyclic.ld)SquareTimerDone,PV(-1),11,(Cyclic.ld)HWBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)PPDTimerDone,PV(-1),11,(Cyclic.ld)LBrakeEjectorHomeProx,PV(-1),11,(Cyclic.ld)BendSequenceReset,PV(-1),11,(Cyclic.ld)WBRaiseArmsStep,PV(-1),11,(Cyclic.ld)WBCarriageReturnStep,PV(-1),11,(Cyclic.ld)TON_3,PV(-1),53,(Cyclic.ld)BrakeSetButton,PV(-1),11,(Cyclic.ld)WBReadyToCycleStep,PV(-1),11,(Cyclic.ld)TON_1,PV(-1),51,(Cyclic.ld)LBWN4,PV(-1),11,(Cyclic.ld)HWBrakeWithPLC,PV(-1),11,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)WBMachineSetStep,PV(-1),11,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)LBrakeEjectorSwitch,PV(-1),11,(Cyclic.ld)LBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),52,(Cyclic.ld)EjectTimerDone,PV(-1),11,(Cyclic.ld)LBBeamDownDone,PV(-1),11,(Cyclic.ld)BrakeActive,PV(-1),11,(Cyclic.ld)WBLowerCarriageArmsStep,PV(-1),11,(Cyclic.ld)WBPreset1,PV(-1),3,(Cyclic.ld)BrakeAutoRequest,PV(-1),11,(Cyclic.ld)LBWN10,PV(-1),11,(Cyclic.ld)BrakeHydraulics,PV(-1),11,(Cyclic.ld)WBBendSeqStartStep,PV(-1),11,(Cyclic.ld)WBrakeArmsUp,PV(-1),11,(Cyclic.ld)LBWNReady,PV(-1),11,(Cyclic.ld)WBRaiseLeafStep,PV(-1),11,(Cyclic.ld)BrakeArmLwrInhibit,PV(-1),11,(Cyclic.ld)WBNotClampedStep,PV(-1),11,(Cyclic.ld)BrakeIsRefed,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0xc12),19,(Init.ld)MoveStarted,PV(-1),11,(Cyclic.ld)BrakeBeamUpProx,PV(-1),11,(Cyclic.ld)WBCarriageReturningStep,PV(-1),11,(Cyclic.ld)LBWN9,PV(-1),11,(Cyclic.ld)WBNotInPositionStep,PV(-1),11,(Cyclic.ld)BrakeBeamLwrInhibit,PV(-1),11,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0xc1c),19,(Init.ld)TON_4,PV(-1),54,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)LBWN1,PV(-1),11,(Cyclic.ld)WBPreset2,PV(-1),3,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)WBSquareStep,PV(-1),11,(Cyclic.ld)DoneBending,PV(-1),11,(Cyclic.ld)BrakeSequenceReset,PV(-1),11,(Cyclic.ld)MoveCarriage,PV(-1),11,(Cyclic.ld)HWBCarriageInPosition,PV(-1),11,(Cyclic.ld)FBBrakeSetSignal,PV(-1),11,(Cyclic.ld)MaterialClamped,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)TON_7,PV(-1),57,(Cyclic.ld)WBPartPastStep,PV(-1),11,(Cyclic.ld)WBOpenClampStep,PV(-1),11,(Cyclic.ld)EjectComplete,PV(-1),11,(Cyclic.ld)BrakeRequired,PV(-1),11,(Cyclic.ld)WBPartPresentStep,PV(-1),11,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0xc2f),0_GLOBAL_OFFSET_TABLE_,PCREL(0xbff),0_GLOBAL_OFFSET_TABLE_,PCREL(0x43),0|FILES|3|173|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Cyclic.ldC:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Init.ldC:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Exit.ld|LINE|98|1059|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Cyclic.ld|1|20|__AS__CyclicProgram1,71,014,191,019,234,024,279,033,365,040,425,047,483,054,541,061,599,070,672,077,730,083,788,094,895,0105,1000,0115,1090,0131,1240,0142,1345,0147,1388,0155,1461,0160,1504,0165,1547,0170,1592,0179,1680,0186,1738,0188,1749,0189,1757,0191,1775,0193,1788,0194,1807,0196,1825,0198,1826,0200,1837,0201,1845,0203,1863,0205,1879,0206,1898,0208,1916,0210,1917,0212,1928,0213,1936,0215,1954,0217,1970,0218,1989,0220,2007,0222,2008,0224,2019,0225,2027,0227,2045,0229,2061,0230,2080,0232,2098,0234,2099,0236,2110,0237,2118,0239,2136,0241,2149,0242,2168,0244,2186,0246,2187,0248,2198,0249,2206,0252,2247,0254,2248,0257,2265,0260,2282,0266,2338,0268,2355,0269,2374,0275,2431,0282,2502,0287,2545,0292,2588,0297,2631,0302,2674,0307,2719,0312,2762,0316,2792,0318,2803,0319,2811,0321,2829,0323,2845,0324,2864,0326,2882,0328,2883,0330,2894,0331,2902,0333,2920,0334,2939,0336,2957,0338,2958,0340,2969,0341,2977,0343,2995,0345,3011,0346,3030,0348,3048,0349,3049,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Cyclic.ld|__AS__CyclicProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Init.ld|1|18|__AS__InitProgram2,3083,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Init.ld|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Exit.ld|1|18|__AS__ExitProgram2,3123,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/HWBwoPLC/Exit.ld|__AS__ExitProgram|