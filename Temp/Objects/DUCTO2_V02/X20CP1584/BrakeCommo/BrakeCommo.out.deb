SECTIONS,12|INFO|7|104|GOT_COUNT,195GOT_DATA,3LOADERSTART,144EXIT_INIT,4571EXIT_CYCLIC,4538EXIT_EXIT,4611NO_DEBUG_INFO,0|GOT|195|6971|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0f_trig,AVT + Name(-1),0BrakeAutoIndicator,PV(-1),11,(Cyclic.ld)LBrakePartEjectSolenoid,PV(-1),11,(Cyclic.ld)BrakeEncoder,PV(-1),3,(Cyclic.ld)BRK_T5,PV(-1),3,(Cyclic.ld)WBBeamSettleStep,PV(-1),11,(Cyclic.ld)JobsDifferent,PV(-1),11,(Cyclic.ld)InsulationRequired,PV(-1),11,(Cyclic.ld)zzBOOL00010011,PV(-1),11,(Cyclic.ld)BrakeManualIndicator,PV(-1),11,(Cyclic.ld)BRK_T1,PV(-1),3,(Cyclic.ld)BrakeSetOK,PV(-1),11,(Cyclic.ld)zz000800010002,PV(-1),12,(Cyclic.ld)zzRTR00001000C,PV(-1),69,(Cyclic.ld)TON_0,PV(-1),50,(Cyclic.ld)WB1BendDoneStep,PV(-1),11,(Cyclic.ld)BeginEjectStep,PV(-1),11,(Cyclic.ld)BRK_T2,PV(-1),3,(Cyclic.ld)WBCloseClampStep,PV(-1),11,(Cyclic.ld)zz000400010000,PV(-1),3,(Cyclic.ld)BrakeCarriageTarget,PV(-1),12,(Cyclic.ld)BAOK,PV(-1),11,(Cyclic.ld)WBPreset6,PV(-1),3,(Cyclic.ld)zzBOOL00010014,PV(-1),11,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)BrakeTarget3,PV(-1),12,(Cyclic.ld)WBPreset3,PV(-1),3,(Cyclic.ld)zzBOOL0001000C,PV(-1),11,(Cyclic.ld)BrakeConveyorLow,PV(-1),11,(Cyclic.ld)PartPresentPSpotter,PV(-1),11,(Cyclic.ld)LBWN5,PV(-1),11,(Cyclic.ld)WBArmsUpStep,PV(-1),11,(Cyclic.ld)BrakeSingleCycle,PV(-1),11,(Cyclic.ld)zzRTR00001000A,PV(-1),67,(Cyclic.ld)zzBOOL0001001D,PV(-1),11,(Cyclic.ld)zzBOOL0001001A,PV(-1),11,(Cyclic.ld)BrakeLeafLower,PV(-1),11,(Cyclic.ld)BrakeStatus,PV(-1),3,(Cyclic.ld)BrakeAuto,PV(-1),11,(Cyclic.ld)zzBOOL0001000E,PV(-1),11,(Cyclic.ld)zzRTR00001000E,PV(-1),71,(Cyclic.ld)CarriageClampClose,PV(-1),11,(Cyclic.ld)zzBOOL00010016,PV(-1),11,(Cyclic.ld)BendingAgain,PV(-1),11,(Cyclic.ld)LBWN11,PV(-1),11,(Cyclic.ld)zzFTR000010001,PV(-1),56,(Cyclic.ld)RealBrakePosition,PV(-1),12,(Cyclic.ld)zzBOOL0001000F,PV(-1),11,(Cyclic.ld)BeamSettleTimerDone,PV(-1),11,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)zz000400010002,PV(-1),3,(Cyclic.ld)BrakeIsSetUp,PV(-1),11,(Cyclic.ld)ResOK,PV(-1),11,(Cyclic.ld)RefSignalReset,PV(-1),11,(Cyclic.ld)RunJob,PV(-1),3,(Cyclic.ld)BrakeLeafHomeProx,PV(-1),11,(Cyclic.ld)WBPreset4,PV(-1),3,(Cyclic.ld)LBWN2,PV(-1),11,(Cyclic.ld)zzRTR000010000,PV(-1),57,(Cyclic.ld)zzRTR000010002,PV(-1),59,(Cyclic.ld)HWBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)zz000C00010003,PV(-1),3,(Cyclic.ld)zzRTR000010010,PV(-1),73,(Cyclic.ld)BendSequenceReset,PV(-1),11,(Cyclic.ld)WBRaiseArmsStep,PV(-1),11,(Cyclic.ld)WBCarriageReturnStep,PV(-1),11,(Cyclic.ld)BrakeReference,PV(-1),12,(Cyclic.ld)zzBOOL00010017,PV(-1),11,(Cyclic.ld)EStopClear,PV(-1),11,(Cyclic.ld)CarriageArmRaise,PV(-1),11,(Cyclic.ld)zz000C00010001,PV(-1),3,(Cyclic.ld)TON_3,PV(-1),53,(Cyclic.ld)RaiseSquareArms,PV(-1),11,(Cyclic.ld)LBrakeWithPLC,PV(-1),11,(Cyclic.ld)BrakeSetButton,PV(-1),11,(Cyclic.ld)WBReadyToCycleStep,PV(-1),11,(Cyclic.ld)zzBOOL00010012,PV(-1),11,(Cyclic.ld)BrakeRefSignal,PV(-1),11,(Cyclic.ld)BrakeResolution,PV(-1),12,(Cyclic.ld)RaiseLeafTimerDone,PV(-1),11,(Cyclic.ld)TON_1,PV(-1),51,(Cyclic.ld)zz000C00010005,PV(-1),3,(Cyclic.ld)LBWN4,PV(-1),11,(Cyclic.ld)ConvertBPresets,PV(-1),11,(Cyclic.ld)HWBrakeWithPLC,PV(-1),11,(Cyclic.ld)zzRTR00001000B,PV(-1),68,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)SetBendingSolenoids,PV(-1),11,(Cyclic.ld)WBPreset5,PV(-1),3,(Cyclic.ld)BCTGreatThan0,PV(-1),11,(Cyclic.ld)WBMachineSetStep,PV(-1),11,(Cyclic.ld)BrakeTarget0,PV(-1),12,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)zzFTR000010000,PV(-1),55,(Cyclic.ld)LBrakeEjectorSwitch,PV(-1),11,(Cyclic.ld)BrakeLeafRaise,PV(-1),11,(Cyclic.ld)zzBOOL00010013,PV(-1),11,(Cyclic.ld)zzBOOL0001001E,PV(-1),11,(Cyclic.ld)LBrakeWithNoPLC,PV(-1),11,(Cyclic.ld)MakeTargets,PV(-1),11,(Cyclic.ld)WBRaiseBeamStep,PV(-1),11,(Cyclic.ld)BendingLatch,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)zzRTR000010005,PV(-1),62,(Cyclic.ld)zz000300010000,PV(-1),8,(Cyclic.ld)BrakeBeamRaise,PV(-1),11,(Cyclic.ld)zzBOOL0001000A,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),52,(Cyclic.ld)ExitBeltsOn,PV(-1),11,(Cyclic.ld)BrakeActive,PV(-1),11,(Cyclic.ld)zzBOOL0001000D,PV(-1),11,(Cyclic.ld)WBLowerCarriageArmsStep,PV(-1),11,(Cyclic.ld)WBPreset1,PV(-1),3,(Cyclic.ld)BrakeAutoRequest,PV(-1),11,(Cyclic.ld)zz000800010000,PV(-1),12,(Cyclic.ld)WBLeafNotHomeStep,PV(-1),11,(Cyclic.ld)BRK_T6,PV(-1),3,(Cyclic.ld)zzRTR000010008,PV(-1),65,(Cyclic.ld)WBCheckBeamStep,PV(-1),11,(Cyclic.ld)LBWN10,PV(-1),11,(Cyclic.ld)BrakeHydraulics,PV(-1),11,(Cyclic.ld)WBBendSeqStartStep,PV(-1),11,(Cyclic.ld)zzRTR000010006,PV(-1),63,(Cyclic.ld)BrakeActual,PV(-1),12,(Cyclic.ld)zzRTR000010003,PV(-1),60,(Cyclic.ld)LBWNReady,PV(-1),11,(Cyclic.ld)WBRaiseLeafStep,PV(-1),11,(Cyclic.ld)zz000C00010004,PV(-1),3,(Cyclic.ld)BrakeBeamLower,PV(-1),11,(Cyclic.ld)zzBOOL00010010,PV(-1),11,(Cyclic.ld)BrakeArmLwrInhibit,PV(-1),11,(Cyclic.ld)BrakeBeamDownProx,PV(-1),11,(Cyclic.ld)BRK_T4,PV(-1),3,(Cyclic.ld)BrakeIsRefed,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0x11e2),19,(Init.ld)zz000800010003,PV(-1),12,(Cyclic.ld)BrakeBeamUpProx,PV(-1),11,(Cyclic.ld)WBCheckLeafStep,PV(-1),11,(Cyclic.ld)BRK_T3,PV(-1),3,(Cyclic.ld)zz000400010001,PV(-1),3,(Cyclic.ld)WBLowerBeamStep,PV(-1),11,(Cyclic.ld)PCBrakeSetSignal,PV(-1),11,(Cyclic.ld)zz000C00010000,PV(-1),3,(Cyclic.ld)WBLowerLeafStep,PV(-1),11,(Cyclic.ld)BrakeDesired,PV(-1),12,(Cyclic.ld)zzRTR00001000F,PV(-1),72,(Cyclic.ld)RawBrakeEncoder,PV(-1),12,(Cyclic.ld)BrakeBeamLwrInhibit,PV(-1),11,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0x11ec),19,(Init.ld)TON_4,PV(-1),54,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)SetSignalReset,PV(-1),11,(Cyclic.ld)zzBOOL00010019,PV(-1),11,(Cyclic.ld)WBStopLeafStep,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)zzBOOL0001001B,PV(-1),11,(Cyclic.ld)BrakeTarget2,PV(-1),12,(Cyclic.ld)zzBOOL0001000B,PV(-1),11,(Cyclic.ld)WBPreset2,PV(-1),3,(Cyclic.ld)BrakeTarget1,PV(-1),12,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)WBIndex,PV(-1),8,(Cyclic.ld)DoneBending,PV(-1),11,(Cyclic.ld)zzBOOL0001001C,PV(-1),11,(Cyclic.ld)FBBrakeSetSignal,PV(-1),11,(Cyclic.ld)CarriageArmLower,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)zzRTR00001000D,PV(-1),70,(Cyclic.ld)SingleCyclingBrake,PV(-1),11,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)zzBOOL00010015,PV(-1),11,(Cyclic.ld)zzRTR000010001,PV(-1),58,(Cyclic.ld)zzRTR000010004,PV(-1),61,(Cyclic.ld)BDOK,PV(-1),11,(Cyclic.ld)zz000300010001,PV(-1),8,(Cyclic.ld)ElectricWrapBrake,PV(-1),11,(Cyclic.ld)WBOpenClampStep,PV(-1),11,(Cyclic.ld)StopLeafTimerDone,PV(-1),11,(Cyclic.ld)zz000800010001,PV(-1),12,(Cyclic.ld)zzRTR000010011,PV(-1),74,(Cyclic.ld)EjectComplete,PV(-1),11,(Cyclic.ld)zzRTR000010009,PV(-1),66,(Cyclic.ld)BrakeConveyorHigh,PV(-1),11,(Cyclic.ld)zzRTR000010007,PV(-1),64,(Cyclic.ld)zzBOOL00010018,PV(-1),11,(Cyclic.ld)BrakeJob,PV(-1),3,(Cyclic.ld)zz000C00010002,PV(-1),3,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0x11ff),0_GLOBAL_OFFSET_TABLE_,PCREL(0x11cf),0_GLOBAL_OFFSET_TABLE_,PCREL(0x53),0|FILES|3|182|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ldC:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ldC:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|LINE|198|2089|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ld|1|20|__AS__CyclicProgram1,87,03,98,04,106,08,137,010,138,012,149,013,157,017,191,019,192,021,203,022,211,026,245,028,246,030,257,031,265,035,299,037,300,041,343,042,351,045,417,047,418,065,607,067,618,068,626,070,644,072,657,073,676,075,694,077,695,078,704,080,720,082,737,083,756,084,766,086,778,088,789,089,797,091,815,093,828,094,847,096,865,098,866,099,875,0101,891,0103,908,0104,927,0108,958,0110,975,0111,983,0115,1007,0117,1008,0119,1019,0120,1027,0123,1066,0125,1067,0133,1140,0135,1157,0136,1176,0138,1194,0139,1202,0143,1233,0145,1234,0147,1251,0148,1270,0150,1288,0151,1296,0155,1328,0157,1329,0159,1346,0160,1365,0162,1382,0163,1401,0165,1418,0166,1437,0172,1485,0175,1510,0176,1518,0180,1544,0181,1545,0183,1562,0184,1570,0188,1596,0189,1597,0191,1614,0192,1622,0196,1648,0197,1649,0199,1666,0200,1674,0204,1700,0205,1701,0207,1718,0208,1726,0212,1752,0213,1753,0215,1770,0216,1778,0220,1804,0222,1805,0224,1822,0225,1841,0227,1858,0228,1877,0231,1909,0232,1917,0236,1937,0238,1938,0240,1955,0241,1974,0243,1992,0244,2000,0248,2034,0250,2035,0252,2052,0253,2071,0255,2088,0256,2107,0258,2124,0259,2143,0269,2221,0271,2238,0272,2246,0276,2368,0278,2369,0280,2380,0281,2388,0285,2422,0287,2423,0292,2468,0296,2500,0298,2517,0299,2536,0301,2554,0302,2562,0306,2592,0308,2593,0310,2610,0311,2629,0316,2682,0318,2694,0320,2711,0321,2730,0322,2740,0324,2756,0326,2773,0327,2792,0329,2809,0330,2828,0343,2946,0347,2976,0349,2993,0350,3012,0352,3029,0353,3048,0367,3183,0372,3226,0377,3269,0382,3312,0387,3355,0392,3400,0397,3443,0402,3486,0407,3529,0412,3572,0414,3583,0415,3591,0417,3609,0419,3625,0420,3644,0422,3662,0424,3663,0426,3674,0427,3682,0429,3700,0431,3716,0432,3735,0434,3753,0436,3754,0438,3765,0439,3773,0441,3791,0443,3804,0444,3823,0446,3841,0448,3842,0459,3947,0465,4007,0473,4084,0479,4142,0487,4204,0491,4236,0497,4294,0501,4326,0510,4399,0519,4476,0524,4521,0526,4538,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Cyclic.ld|__AS__CyclicProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ld|1|18|__AS__InitProgram2,4571,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Init.ld|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|1|18|__AS__ExitProgram2,4611,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/BrakeCommon/Exit.ld|__AS__ExitProgram|