SECTIONS,12|INFO|7|103|GOT_COUNT,50GOT_DATA,3LOADERSTART,144EXIT_INIT,4804EXIT_CYCLIC,4743EXIT_EXIT,4843NO_DEBUG_INFO,0|GOT|50|1673|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0IncrementalDINTTarget,PV(-1),3,(Cyclic.st)StopWatch1,PV(-1),12,(Cyclic.st)ActlMetalEncoder,PV(-1),3,(Cyclic.st)Ratio1,PV(-1),8,(Cyclic.st)ActualDAC1,PV(-1),8,(Cyclic.st)MaxDAC,PV(-1),8,(Cyclic.st)DACAdd1,PV(-1),12,(Cyclic.st)UnitsPerInch1,PV(-1),12,(Cyclic.st)MaxSpeed1,PV(-1),12,(Cyclic.st)InPosition1,PV(-1),11,(Cyclic.st)DecelTime1,PV(-1),12,(Cyclic.st)FirstTarget1,PV(-1),11,(Cyclic.st)RealDAC1,PV(-1),12,(Cyclic.st)MaxDACSquared,PV(-1),8,(Cyclic.st)difference,PV(-1),3,(Cyclic.st)MetalTarget,PV(-1),3,(Cyclic.st)AbsoluteDifference,PV(-1),3,(Cyclic.st)LastPosition1,PV(-1),3,(Cyclic.st)Hold1,PV(-1),8,(Cyclic.st)Counter1,PV(-1),8,(Cyclic.st)AccelRampReal,PV(-1),12,(Cyclic.st)DACBalance1,PV(-1),8,(Cyclic.st)ActualSpeed1,PV(-1),12,(Cyclic.st)TargetCount1,PV(-1),8,(Cyclic.st)TopDAC1,PV(-1),8,(Cyclic.st)MetalTolerance,PV(-1),8,(Cyclic.st)DecelRampReal,PV(-1),12,(Cyclic.st)SRM1,PV(-1),12,(Cyclic.st)DecelDistance1,PV(-1),3,(Cyclic.st)MetalScaler,PV(-1),12,(Cyclic.st)PercentJogSpeed1,PV(-1),3,(Cyclic.st)SettleTime1,PV(-1),8,(Cyclic.st)DecelCounter,PV(-1),8,(Cyclic.st)__AS__ImplInitInit,CODE(0x12ca),19,(Init.st)UpdateRate1,PV(-1),8,(Cyclic.st)CoilAccumulator,PV(-1),3,(Cyclic.st)RunSpeed1,PV(-1),3,(Cyclic.st)MaxCountsPerSecond,PV(-1),12,(Cyclic.st)__AS__ImplInitDummyInit,CODE(0x12d4),19,(Init.st)StopFlag1,PV(-1),11,(Cyclic.st)IncrementalRealTarget,PV(-1),12,(Cyclic.st)AverageSpeed1,PV(-1),12,(Cyclic.st)MotionStatus1,PV(-1),8,(Cyclic.st)TargetDAC1,PV(-1),8,(Cyclic.st)_GLOBAL_OFFSET_TABLE_,PCREL(0x12e7),0_GLOBAL_OFFSET_TABLE_,PCREL(0x129f),0_GLOBAL_OFFSET_TABLE_,PCREL(0x13),0|FILES|3|191|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Cyclic.stC:/Code/BandR Duct Line Project/Logical/EMotionControl/Init.stC:/Code/BandR Duct Line Project/Logical/EMotionControl/Exit.st|LINE|129|1338|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Cyclic.st|1|20|__AS__CyclicProgram3,23,04,52,07,79,08,105,09,122,010,156,011,187,012,222,018,233,019,260,020,288,022,325,023,339,024,374,026,397,030,415,031,446,046,464,047,499,049,517,050,559,054,589,055,616,057,632,058,755,059,783,060,816,061,859,062,889,064,1008,065,1062,066,1090,067,1144,068,1277,069,1315,071,1374,072,1407,078,1433,079,1443,080,1453,081,1464,083,1483,084,1512,085,1545,086,1580,087,1613,089,1733,092,1756,093,1770,094,1786,095,1797,096,1807,098,1826,0100,1855,0101,1887,0102,1915,0103,1929,0104,1962,0105,1980,0106,1991,0107,2019,0109,2035,0113,2051,0114,2178,0115,2218,0117,2241,0119,2346,0120,2373,0123,2398,0124,2417,0127,2445,0128,2479,0129,2490,0130,2521,0131,2556,0132,2567,0133,2578,0134,2589,0137,2622,0139,2638,0140,2667,0141,2700,0142,2743,0143,2862,0144,2872,0145,2891,0146,2920,0147,2953,0148,2996,0149,3115,0150,3125,0151,3144,0152,3173,0153,3192,0154,3314,0156,3438,0157,3449,0158,3465,0159,3476,0162,3495,0163,3505,0164,3540,0166,3663,0169,3686,0170,3715,0171,3734,0172,3860,0174,3983,0175,3994,0176,4010,0177,4021,0182,4040,0183,4082,0185,4206,0188,4236,0189,4265,0190,4387,0192,4511,0193,4527,0194,4569,0197,4585,0198,4596,0199,4612,0202,4623,0203,4658,0205,4676,0206,4718,0209,4743,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Cyclic.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Cyclic.st|__AS__CyclicProgram||LINE|4|45|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Init.st|1|18|__AS__InitProgram4,4779,05,4793,06,4804,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Init.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Init.st|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Exit.st|1|18|__AS__ExitProgram6,4843,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Exit.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/EMotionControl/Exit.st|__AS__ExitProgram|