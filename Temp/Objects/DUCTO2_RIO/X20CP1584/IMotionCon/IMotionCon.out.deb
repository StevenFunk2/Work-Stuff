SECTIONS,12|INFO|7|103|GOT_COUNT,53GOT_DATA,3LOADERSTART,144EXIT_INIT,5116EXIT_CYCLIC,5056EXIT_EXIT,5155NO_DEBUG_INFO,0|GOT|53|1781|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0IncrementalDINTTarget,PV(-1),3,(Cyclic.st)StopWatch1,PV(-1),12,(Cyclic.st)ActlMetalEncoder,PV(-1),3,(Cyclic.st)Ratio1,PV(-1),8,(Cyclic.st)ActualDAC1,PV(-1),8,(Cyclic.st)MaxDAC,PV(-1),8,(Cyclic.st)DACAdd1,PV(-1),12,(Cyclic.st)UnitsPerInch1,PV(-1),12,(Cyclic.st)MaxSpeed1,PV(-1),12,(Cyclic.st)InPosition1,PV(-1),11,(Cyclic.st)ActualRunPercent,PV(-1),12,(Cyclic.st)DecelTime1,PV(-1),12,(Cyclic.st)FirstTarget1,PV(-1),11,(Cyclic.st)RealDAC1,PV(-1),12,(Cyclic.st)MaxDACSquared,PV(-1),8,(Cyclic.st)difference,PV(-1),3,(Cyclic.st)MetalTarget,PV(-1),3,(Cyclic.st)AbsoluteDifference,PV(-1),3,(Cyclic.st)LastPosition1,PV(-1),3,(Cyclic.st)Hold1,PV(-1),8,(Cyclic.st)Counter1,PV(-1),8,(Cyclic.st)AccelRampReal,PV(-1),12,(Cyclic.st)DACBalance1,PV(-1),8,(Cyclic.st)ActualSpeed1,PV(-1),12,(Cyclic.st)TargetCount1,PV(-1),8,(Cyclic.st)TopDAC1,PV(-1),8,(Cyclic.st)MetalTolerance,PV(-1),8,(Cyclic.st)DecelRampReal,PV(-1),12,(Cyclic.st)TopLineSpeed,PV(-1),12,(Cyclic.st)SRM1,PV(-1),12,(Cyclic.st)DecelDistance1,PV(-1),3,(Cyclic.st)MetalScaler,PV(-1),12,(Cyclic.st)PercentJogSpeed1,PV(-1),3,(Cyclic.st)SettleTime1,PV(-1),8,(Cyclic.st)DecelCounter,PV(-1),8,(Cyclic.st)__AS__ImplInitInit,CODE(0x1402),19,(Init.st)UpdateRate1,PV(-1),8,(Cyclic.st)CoilAccumulator,PV(-1),3,(Cyclic.st)RunSpeed1,PV(-1),3,(Cyclic.st)MaxCountsPerSecond,PV(-1),12,(Cyclic.st)UpdateRate2,PV(-1),11,(Cyclic.st)__AS__ImplInitDummyInit,CODE(0x140c),19,(Init.st)StopFlag1,PV(-1),11,(Cyclic.st)IncrementalRealTarget,PV(-1),12,(Cyclic.st)AverageSpeed1,PV(-1),12,(Cyclic.st)MotionStatus1,PV(-1),8,(Cyclic.st)TargetDAC1,PV(-1),8,(Cyclic.st)_GLOBAL_OFFSET_TABLE_,PCREL(0x141f),0_GLOBAL_OFFSET_TABLE_,PCREL(0x13d7),0_GLOBAL_OFFSET_TABLE_,PCREL(0x13),0|FILES|3|191|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Cyclic.stC:/Code/BandR Duct Line Project/Logical/IMotionControl/Init.stC:/Code/BandR Duct Line Project/Logical/IMotionControl/Exit.st|LINE|135|1399|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Cyclic.st|1|20|__AS__CyclicProgram3,23,04,52,07,79,08,105,09,122,010,156,011,187,012,222,018,233,019,260,020,288,022,325,023,339,024,374,026,397,030,415,031,446,046,464,047,499,049,517,050,559,054,589,055,616,057,632,058,755,059,783,060,816,061,859,062,897,063,925,065,936,066,1057,067,1085,070,1204,071,1232,072,1270,073,1403,074,1441,076,1500,077,1543,078,1569,079,1701,080,1732,083,1746,084,1756,085,1766,086,1777,088,1796,089,1825,090,1858,091,1893,092,1926,094,2046,097,2069,098,2083,099,2099,0100,2110,0101,2120,0103,2139,0105,2168,0106,2200,0107,2228,0108,2242,0109,2275,0110,2293,0111,2304,0112,2332,0114,2348,0118,2364,0119,2491,0120,2531,0122,2554,0124,2659,0125,2686,0128,2711,0129,2730,0132,2758,0133,2792,0134,2803,0135,2834,0136,2869,0137,2880,0138,2891,0139,2902,0142,2935,0144,2951,0145,2980,0146,3013,0147,3056,0148,3175,0149,3185,0150,3204,0151,3233,0152,3266,0153,3309,0154,3428,0155,3438,0156,3457,0157,3486,0158,3505,0159,3627,0161,3751,0162,3762,0163,3778,0164,3789,0167,3808,0168,3818,0169,3853,0171,3976,0174,3999,0175,4028,0176,4047,0177,4173,0179,4296,0180,4307,0181,4323,0182,4334,0187,4353,0188,4395,0190,4519,0193,4549,0194,4578,0195,4700,0197,4824,0198,4840,0199,4882,0202,4898,0203,4909,0204,4925,0207,4936,0208,4971,0210,4989,0211,5031,0214,5056,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Cyclic.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Cyclic.st|__AS__CyclicProgram||LINE|4|45|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Init.st|1|18|__AS__InitProgram4,5091,05,5105,06,5116,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Init.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Init.st|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Exit.st|1|18|__AS__ExitProgram6,5155,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Exit.st|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/IMotionControl/Exit.st|__AS__ExitProgram|