SECTIONS,12|INFO|7|104|GOT_COUNT,184GOT_DATA,3LOADERSTART,144EXIT_INIT,5647EXIT_CYCLIC,5612EXIT_EXIT,5687NO_DEBUG_INFO,0|GOT|184|6211|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0TOF,AVT + Name(-1),0f_trig,AVT + Name(-1),0MarkPusherStopDOB,PV(-1),11,(Cyclic.ld)MarkGateUpDwell,PV(-1),3,(Cyclic.ld)TableRev2,PV(-1),11,(Cyclic.ld)PSettled,PV(-1),11,(Cyclic.ld)Step13,PV(-1),11,(Cyclic.ld)Step5,PV(-1),11,(Cyclic.ld)tmMPSDelay,PV(-1),3,(Cyclic.ld)TON_6,PV(-1),58,(Cyclic.ld)zz000C00010008,PV(-1),3,(Cyclic.ld)Step7,PV(-1),11,(Cyclic.ld)zz000C00010006,PV(-1),3,(Cyclic.ld)zzBOOL00010011,PV(-1),11,(Cyclic.ld)SettleTime,PV(-1),3,(Cyclic.ld)zzRTR00001000C,PV(-1),78,(Cyclic.ld)MarkTableDecelDelay,PV(-1),3,(Cyclic.ld)TableFwd3,PV(-1),11,(Cyclic.ld)zzRTR000010012,PV(-1),84,(Cyclic.ld)TON_0,PV(-1),52,(Cyclic.ld)Psh8,PV(-1),11,(Cyclic.ld)Step15,PV(-1),11,(Cyclic.ld)MarkGateRaise,PV(-1),11,(Cyclic.ld)MarkTableFwd,PV(-1),11,(Cyclic.ld)MarkConveyorDelayFwd,PV(-1),11,(Cyclic.ld)ForwardDelay,PV(-1),3,(Cyclic.ld)zzBOOL00010014,PV(-1),11,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)Step4,PV(-1),11,(Cyclic.ld)TOF_0,PV(-1),50,(Cyclic.ld)zzBOOL0001000C,PV(-1),11,(Cyclic.ld)Gate2,PV(-1),11,(Cyclic.ld)MarkPPauseDwell,PV(-1),3,(Cyclic.ld)zzRTR00001000A,PV(-1),76,(Cyclic.ld)zzBOOL0001001D,PV(-1),11,(Cyclic.ld)zzBOOL0001001A,PV(-1),11,(Cyclic.ld)tmMPS,PV(-1),3,(Cyclic.ld)Psh1,PV(-1),11,(Cyclic.ld)Step8,PV(-1),11,(Cyclic.ld)TableStyle3,PV(-1),11,(Cyclic.ld)zzBOOL0001000E,PV(-1),11,(Cyclic.ld)zzRTR00001000E,PV(-1),80,(Cyclic.ld)WaitDone,PV(-1),11,(Cyclic.ld)zz000C00010009,PV(-1),3,(Cyclic.ld)zzBOOL00010016,PV(-1),11,(Cyclic.ld)Step13A,PV(-1),11,(Cyclic.ld)zzFTR000010001,PV(-1),65,(Cyclic.ld)DischargeMarkSide,PV(-1),11,(Cyclic.ld)Gate3,PV(-1),11,(Cyclic.ld)zzBOOL0001000F,PV(-1),11,(Cyclic.ld)TON_5,PV(-1),57,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)tmPPDwell,PV(-1),3,(Cyclic.ld)zzRTR000010014,PV(-1),86,(Cyclic.ld)zzRTR000010000,PV(-1),66,(Cyclic.ld)Psh2,PV(-1),11,(Cyclic.ld)PshStopDelayTmrDone,PV(-1),11,(Cyclic.ld)MarkPushComplete,PV(-1),11,(Cyclic.ld)zzRTR000010002,PV(-1),68,(Cyclic.ld)SetupPushers,PV(-1),11,(Cyclic.ld)zz000C00010003,PV(-1),3,(Cyclic.ld)zzRTR000010010,PV(-1),82,(Cyclic.ld)zzBOOL00010017,PV(-1),11,(Cyclic.ld)GateLowerDelay,PV(-1),3,(Cyclic.ld)MarkPStopDelay,PV(-1),3,(Cyclic.ld)zz000C00010001,PV(-1),3,(Cyclic.ld)TON_3,PV(-1),55,(Cyclic.ld)zzBOOL00010012,PV(-1),11,(Cyclic.ld)DirectionDelay,PV(-1),11,(Cyclic.ld)Step12,PV(-1),11,(Cyclic.ld)Mark3PusherHome,PV(-1),11,(Cyclic.ld)MarkPshrHome,PV(-1),11,(Cyclic.ld)zzRTR000010013,PV(-1),85,(Cyclic.ld)TON_1,PV(-1),53,(Cyclic.ld)Psh6,PV(-1),11,(Cyclic.ld)Psh9,PV(-1),11,(Cyclic.ld)zz000C00010005,PV(-1),3,(Cyclic.ld)MarkPushReady,PV(-1),11,(Cyclic.ld)DischargeTDCEnd,PV(-1),11,(Cyclic.ld)TableRev3,PV(-1),11,(Cyclic.ld)zz000C0001000A,PV(-1),3,(Cyclic.ld)zzRTR00001000B,PV(-1),77,(Cyclic.ld)Step6A,PV(-1),11,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)Step3,PV(-1),11,(Cyclic.ld)ReverseDelay,PV(-1),3,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)zzFTR000010000,PV(-1),64,(Cyclic.ld)zzBOOL00010013,PV(-1),11,(Cyclic.ld)Step1,PV(-1),11,(Cyclic.ld)TableStyle2,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)zzRTR000010005,PV(-1),71,(Cyclic.ld)Psh4,PV(-1),11,(Cyclic.ld)MarkTransferModel,PV(-1),3,(Cyclic.ld)TOF_1,PV(-1),51,(Cyclic.ld)zzBOOL0001000A,PV(-1),11,(Cyclic.ld)Psh10,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),54,(Cyclic.ld)Step11,PV(-1),11,(Cyclic.ld)MatlAtMarkTable,PV(-1),11,(Cyclic.ld)PusherOffDelay,PV(-1),3,(Cyclic.ld)TON_9,PV(-1),61,(Cyclic.ld)MPRTime,PV(-1),3,(Cyclic.ld)TON_10,PV(-1),53,(Cyclic.ld)zzBOOL0001000D,PV(-1),11,(Cyclic.ld)MarkTableStart,PV(-1),11,(Cyclic.ld)MarkPStartDelay,PV(-1),3,(Cyclic.ld)Psh3,PV(-1),11,(Cyclic.ld)zzRTR000010008,PV(-1),74,(Cyclic.ld)zzRTR000010006,PV(-1),72,(Cyclic.ld)zzRTR000010003,PV(-1),69,(Cyclic.ld)Psh11,PV(-1),11,(Cyclic.ld)PshStartTmrDone,PV(-1),11,(Cyclic.ld)zz000C00010004,PV(-1),3,(Cyclic.ld)zzBOOL00010010,PV(-1),11,(Cyclic.ld)PshStageTmrDone,PV(-1),11,(Cyclic.ld)truepart,PV(-1),11,(Cyclic.ld)MarkPshrFwd,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0x1616),19,(Init.ld)MarkPusherReverse,PV(-1),11,(Cyclic.ld)zz000C00010007,PV(-1),3,(Cyclic.ld)GateReset,PV(-1),11,(Cyclic.ld)MarkTableStop,PV(-1),11,(Cyclic.ld)Step2,PV(-1),11,(Cyclic.ld)PushReverse,PV(-1),11,(Cyclic.ld)zzRTR000010016,PV(-1),88,(Cyclic.ld)tmDirectionDelay,PV(-1),3,(Cyclic.ld)GateUpTime,PV(-1),3,(Cyclic.ld)Step14,PV(-1),11,(Cyclic.ld)PushValve2,PV(-1),11,(Cyclic.ld)zz000C00010000,PV(-1),3,(Cyclic.ld)zz000C0001000B,PV(-1),3,(Cyclic.ld)MarkPusherStop,PV(-1),11,(Cyclic.ld)zzRTR00001000F,PV(-1),81,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0x1620),19,(Init.ld)TON_4,PV(-1),56,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)zzBOOL00010019,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)PshPauseTmrDone,PV(-1),11,(Cyclic.ld)PushValve3,PV(-1),11,(Cyclic.ld)zzBOOL0001001B,PV(-1),11,(Cyclic.ld)Step9,PV(-1),11,(Cyclic.ld)zzBOOL0001000B,PV(-1),11,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)TON_8,PV(-1),60,(Cyclic.ld)DuctSelected,PV(-1),11,(Cyclic.ld)tmMPSD,PV(-1),3,(Cyclic.ld)BackUpParts,PV(-1),11,(Cyclic.ld)zzBOOL0001001C,PV(-1),11,(Cyclic.ld)Psh5,PV(-1),11,(Cyclic.ld)MarkTableLatch,PV(-1),11,(Cyclic.ld)truepartoff,PV(-1),11,(Cyclic.ld)DischargeTDCSide,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)Step6,PV(-1),11,(Cyclic.ld)zzRTR00001000D,PV(-1),79,(Cyclic.ld)ULineSelected,PV(-1),11,(Cyclic.ld)MarkTTPusherJogRevPB,PV(-1),11,(Cyclic.ld)zzRTR000010015,PV(-1),87,(Cyclic.ld)TableFwd2,PV(-1),11,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)zzBOOL00010015,PV(-1),11,(Cyclic.ld)zzRTR000010001,PV(-1),67,(Cyclic.ld)zzRTR000010004,PV(-1),70,(Cyclic.ld)TON_7,PV(-1),59,(Cyclic.ld)TON_13,PV(-1),53,(Cyclic.ld)zzRTR000010011,PV(-1),83,(Cyclic.ld)MarkTableOn,PV(-1),11,(Cyclic.ld)zzRTR000010009,PV(-1),75,(Cyclic.ld)MarkPStageTime,PV(-1),3,(Cyclic.ld)zzRTR000010007,PV(-1),73,(Cyclic.ld)zzBOOL00010018,PV(-1),11,(Cyclic.ld)MarkTableRev,PV(-1),11,(Cyclic.ld)zz000C00010002,PV(-1),3,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0x1633),0_GLOBAL_OFFSET_TABLE_,PCREL(0x1603),0_GLOBAL_OFFSET_TABLE_,PCREL(0x63),0|FILES|3|176|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ldC:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ldC:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|LINE|249|2685|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ld|1|20|__AS__CyclicProgram1,103,05,133,07,150,08,169,013,213,021,273,023,284,024,292,028,328,030,329,032,346,033,365,036,396,037,404,041,430,043,431,045,448,046,467,053,539,058,582,063,625,068,668,073,711,078,754,083,799,088,842,090,859,091,878,096,922,0104,984,0106,1001,0107,1020,0114,1092,0119,1135,0124,1178,0129,1223,0134,1266,0141,1328,0143,1339,0144,1347,0150,1410,0152,1426,0153,1445,0155,1463,0157,1464,0159,1481,0160,1500,0162,1518,0163,1526,0167,1552,0169,1553,0171,1570,0172,1589,0174,1607,0175,1615,0179,1641,0181,1642,0183,1653,0184,1661,0192,1741,0194,1754,0195,1773,0197,1791,0199,1792,0201,1803,0202,1811,0206,1859,0208,1872,0209,1891,0211,1909,0213,1910,0215,1921,0216,1929,0222,1992,0224,2008,0225,2027,0227,2045,0229,2046,0231,2057,0232,2065,0234,2083,0236,2099,0237,2118,0239,2136,0241,2137,0244,2154,0251,2218,0260,2295,0264,2325,0268,2357,0270,2374,0271,2393,0273,2410,0274,2429,0276,2446,0277,2465,0283,2513,0285,2530,0286,2549,0296,2651,0303,2709,0305,2726,0306,2745,0308,2762,0309,2781,0318,2856,0320,2873,0321,2892,0330,2966,0332,2983,0333,3002,0338,3046,0342,3076,0344,3093,0345,3112,0347,3130,0348,3138,0352,3164,0354,3165,0356,3176,0357,3184,0359,3202,0361,3218,0362,3237,0364,3255,0366,3256,0368,3273,0369,3292,0371,3310,0372,3318,0376,3344,0378,3345,0380,3356,0381,3364,0383,3382,0385,3398,0386,3417,0388,3435,0390,3436,0392,3453,0393,3472,0395,3490,0396,3498,0400,3524,0402,3525,0404,3536,0405,3544,0407,3562,0409,3578,0410,3597,0412,3615,0414,3616,0416,3633,0417,3652,0426,3739,0431,3784,0436,3827,0440,3857,0442,3874,0443,3893,0445,3911,0446,3919,0450,3945,0452,3946,0454,3957,0455,3965,0457,3983,0459,3999,0460,4018,0462,4036,0464,4037,0469,4082,0474,4129,0476,4140,0477,4148,0480,4184,0482,4185,0484,4202,0485,4221,0488,4252,0489,4260,0493,4286,0495,4287,0497,4298,0498,4306,0502,4350,0504,4366,0505,4385,0507,4403,0509,4404,0511,4421,0512,4440,0515,4471,0516,4479,0520,4505,0522,4506,0524,4517,0525,4525,0531,4588,0533,4604,0534,4623,0536,4641,0538,4642,0540,4659,0541,4678,0544,4709,0545,4717,0549,4743,0551,4744,0553,4761,0554,4780,0557,4811,0558,4819,0562,4845,0564,4846,0566,4857,0567,4865,0570,4896,0572,4912,0573,4931,0575,4949,0577,4950,0579,4961,0580,4969,0583,5000,0585,5016,0586,5035,0588,5053,0590,5054,0592,5071,0593,5090,0596,5121,0597,5129,0601,5155,0603,5156,0605,5167,0606,5175,0608,5193,0610,5209,0611,5228,0613,5246,0615,5247,0621,5294,0628,5352,0635,5410,0642,5468,0651,5554,0657,5612,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/MarkTable/Cyclic.ld|__AS__CyclicProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ld|1|18|__AS__InitProgram2,5647,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/MarkTable/Init.ld|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|1|18|__AS__ExitProgram2,5687,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/MarkTable/Exit.ld|__AS__ExitProgram|