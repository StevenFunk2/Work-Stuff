SECTIONS,12|INFO|7|103|GOT_COUNT,90GOT_DATA,3LOADERSTART,144EXIT_INIT,2153EXIT_CYCLIC,2090EXIT_EXIT,2191NO_DEBUG_INFO,0|GOT|90|3151|,CODE(0x0),0,CODE(0x0),0,CODE(0x0),0r_trig,AVT + Name(-1),0TON,AVT + Name(-1),0TP,AVT + Name(-1),0GFeedMoveQed,PV(-1),11,(Cyclic.ld)ElectricServoStuffOK,PV(-1),11,(Init.ld)zzBOOL00010011,PV(-1),11,(Cyclic.ld)IncrementalDINTTarget,PV(-1),3,(Cyclic.ld)ActlMetalEncoder,PV(-1),3,(Cyclic.ld)TON_0,PV(-1),50,(Cyclic.ld)MoveInitiated,PV(-1),11,(Cyclic.ld)zz000400010000,PV(-1),3,(Cyclic.ld)zzBOOL00010001,PV(-1),11,(Cyclic.ld)zzBOOL0001000C,PV(-1),11,(Cyclic.ld)UnitsPerInch1,PV(-1),12,(Cyclic.ld)InPosition1,PV(-1),11,(Cyclic.ld)ProcessorJogRev,PV(-1),11,(Cyclic.ld)SlowSpeedSolenoid,PV(-1),11,(Cyclic.ld)zzBOOL0001000E,PV(-1),11,(Cyclic.ld)ForwardTP,PV(-1),11,(Cyclic.ld)zzBOOL0001000F,PV(-1),11,(Cyclic.ld)TON_5,PV(-1),56,(Cyclic.ld)zzBOOL00010002,PV(-1),11,(Cyclic.ld)TP_0,PV(-1),55,(Cyclic.ld)zz000400010002,PV(-1),3,(Cyclic.ld)GStep12,PV(-1),11,(Cyclic.ld)zzRTR000010000,PV(-1),57,(Cyclic.ld)ForwardFeedSolenoid,PV(-1),11,(Cyclic.ld)LevelerBrakeSolenoid,PV(-1),11,(Cyclic.ld)zzRTR000010002,PV(-1),59,(Cyclic.ld)ProcessorJogFwd,PV(-1),11,(Cyclic.ld)InSSWindow,PV(-1),11,(Cyclic.ld)CoilLineTargetWindow,PV(-1),3,(Cyclic.ld)TON_3,PV(-1),53,(Cyclic.ld)zzBOOL00010012,PV(-1),11,(Cyclic.ld)RevDelay,PV(-1),11,(Cyclic.ld)ServoLoop1Closed,PV(-1),11,(Init.ld)TON_1,PV(-1),51,(Cyclic.ld)zzBOOL00010004,PV(-1),11,(Cyclic.ld)difference,PV(-1),3,(Cyclic.ld)MetalTarget,PV(-1),3,(Cyclic.ld)zzBOOL00010008,PV(-1),11,(Cyclic.ld)AbsoluteDifference,PV(-1),3,(Cyclic.ld)zzBOOL00010013,PV(-1),11,(Cyclic.ld)FwdDelay,PV(-1),11,(Cyclic.ld)PositionLTTarget,PV(-1),11,(Cyclic.ld)zzBOOL00010007,PV(-1),11,(Cyclic.ld)CoilLinePower,PV(-1),11,(Cyclic.ld)MoveForward,PV(-1),11,(Cyclic.ld)zzBOOL0001000A,PV(-1),11,(Cyclic.ld)TON_2,PV(-1),52,(Cyclic.ld)InCycle,PV(-1),11,(Cyclic.ld)zzBOOL0001000D,PV(-1),11,(Cyclic.ld)EnableForwardSolenoid,PV(-1),11,(Cyclic.ld)PositionGTTarget,PV(-1),11,(Cyclic.ld)zzRTR000010003,PV(-1),60,(Cyclic.ld)MetalScaler,PV(-1),12,(Cyclic.ld)zzBOOL00010010,PV(-1),11,(Cyclic.ld)__AS__ImplInitInit,CODE(0x870),19,(Init.ld)GStep21,PV(-1),11,(Cyclic.ld)CoilAccumulator,PV(-1),3,(Cyclic.ld)InTargetWindow,PV(-1),11,(Cyclic.ld)zz000400010001,PV(-1),3,(Cyclic.ld)MoveReverse,PV(-1),11,(Cyclic.ld)CoilLineSlowWindow,PV(-1),3,(Cyclic.ld)__AS__ImplInitDummyInit,CODE(0x87a),19,(Init.ld)TON_4,PV(-1),54,(Cyclic.ld)zzBOOL00010005,PV(-1),11,(Cyclic.ld)zzBOOL00010000,PV(-1),11,(Cyclic.ld)zzBOOL0001000B,PV(-1),11,(Cyclic.ld)zzBOOL00010009,PV(-1),11,(Cyclic.ld)zz000400010004,PV(-1),3,(Cyclic.ld)ReverseFeedSolenoid,PV(-1),11,(Cyclic.ld)IncrementalRealTarget,PV(-1),12,(Cyclic.ld)MovingToPosition,PV(-1),11,(Cyclic.ld)zzBOOL00010003,PV(-1),11,(Cyclic.ld)zz000400010003,PV(-1),3,(Cyclic.ld)zzBOOL00010006,PV(-1),11,(Cyclic.ld)SSSDelay,PV(-1),11,(Cyclic.ld)zzRTR000010001,PV(-1),58,(Cyclic.ld)EngelCoilDriveReady,PV(-1),11,(Cyclic.ld)EnableReverseSolenoid,PV(-1),11,(Cyclic.ld)SettleTimerDone,PV(-1),11,(Cyclic.ld)DuctoAuto,PV(-1),11,(Cyclic.ld)GStep11,PV(-1),11,(Cyclic.ld)_GLOBAL_OFFSET_TABLE_,PCREL(0x88b),0_GLOBAL_OFFSET_TABLE_,PCREL(0x83f),0_GLOBAL_OFFSET_TABLE_,PCREL(0x53),0|FILES|3|179|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Cyclic.ldC:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Init.ldC:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Exit.ld|LINE|106|1075|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Cyclic.ld|1|20|__AS__CyclicProgram1,87,03,104,04,123,07,141,09,158,010,166,013,297,015,298,017,315,018,323,022,347,024,348,026,365,027,373,031,409,033,410,037,442,039,453,040,461,044,498,046,499,048,510,049,518,053,553,055,554,057,565,058,573,062,612,064,613,066,624,067,632,070,665,072,678,073,697,075,715,077,716,079,733,080,752,085,798,087,815,088,834,094,893,096,904,097,912,0101,945,0103,946,0105,957,0106,965,0108,983,0110,996,0111,1015,0113,1033,0115,1034,0117,1045,0118,1053,0120,1073,0122,1086,0123,1105,0125,1123,0127,1124,0133,1182,0135,1193,0136,1201,0138,1219,0140,1232,0141,1251,0143,1269,0145,1270,0154,1358,0156,1369,0157,1377,0161,1410,0163,1411,0165,1422,0166,1430,0168,1450,0170,1463,0171,1482,0173,1500,0175,1501,0177,1512,0178,1520,0180,1538,0182,1551,0183,1570,0185,1588,0187,1589,0193,1647,0202,1737,0204,1748,0205,1756,0209,1795,0211,1796,0213,1807,0214,1815,0216,1832,0217,1851,0219,1870,0221,1883,0222,1902,0224,1920,0226,1921,0239,2043,0242,2060,0245,2090,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Cyclic.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Cyclic.ld|__AS__CyclicProgram||LINE|6|63|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Init.ld|1|18|__AS__InitProgram1,2123,02,2126,04,2138,05,2141,06,2153,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Init.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Init.ld|__AS__InitProgram||LINE|2|27|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Exit.ld|1|18|__AS__ExitProgram2,2191,0|TYPE|49|1466|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Exit.ld|0|int:t(0,1)=r(0,1);0020000000000;0017777777777;char:t(0,2)=r(0,2);0;127;long int:t(0,3)=r(0,1);0020000000000;0017777777777;unsigned int:t(0,4)=r(0,1);0000000000000;0037777777777;long unsigned int:t(0,5)=r(0,1);0000000000000;0037777777777;long long int:t(0,6)=r(0,1);01000000000000000000000;0777777777777777777777;long long unsigned int:t(0,7)=r(0,1);0000000000000;01777777777777777777777;short int:t(0,8)=r(0,8);-32768;32767;short unsigned int:t(0,9)=r(0,9);0;65535;signed char:t(0,10)=r(0,10);-128;127;unsigned char:t(0,11)=r(0,11);0;255;float:t(0,12)=r(0,1);4;0;double:t(0,13)=r(0,1);8;0;long double:t(0,14)=r(0,1);12;0;complex int:t(0,15)=s8real:(0,1),0,32;imag:(0,1),32,32;;complex float:t(0,16)=r(0,16);4;0;complex double:t(0,17)=r(0,17);8;0;complex long double:t(0,18)=r(0,18);12;0;void:t(0,19)=(0,19)plcbit:t(0,20)=(0,11)plcbyte:t(0,21)=(0,11)plcword:t(0,22)=(0,9)plcdword:t(0,23)=(0,5)plctime:t(0,24)=(0,3)plctod:t(0,25)=(0,5)plcdate:t(0,26)=(0,5)plcdt:t(0,27)=(0,5)plcstring:t(0,28)=(0,2)plcwstring:t(0,29)=(0,9)BOOL:t(0,30)=(0,20)BYTE:t(0,31)=(0,21)WORD:t(0,32)=(0,22)DWORD:t(0,33)=(0,23)SINT:t(0,34)=(0,10)INT:t(0,35)=(0,8)DINT:t(0,36)=(0,3)USINT:t(0,37)=(0,11)UINT:t(0,38)=(0,9)UDINT:t(0,39)=(0,5)REAL:t(0,40)=(0,12)LREAL:t(0,41)=(0,13)TIME:t(0,42)=(0,24)TOD:t(0,43)=(0,25)TIME_OF_DAY:t(0,44)=(0,25)DATE:t(0,45)=(0,26)DT:t(0,46)=(0,27)DATE_AND_TIME:t(0,47)=(0,27)STRING:t(0,48)=(0,28)WSTRING:t(0,49)=(0,29)|FUNC|0|0|C:/Code/BandR Duct Line Project/Logical/EFdrHydDrv/Exit.ld|__AS__ExitProgram|